{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174\\u1111\\u1169\\u11AF\\u1103\\u1165/programming/program/nextJs-nodeBird/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport { Avatar, Button, ButtonGroup, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, List, ListItem, ListItemAvatar, ListItemText, Popover, Typography } from \"@material-ui/core\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST, LIKE_BUTTON_REQUEST, UNLIKE_BUTTON_REQUEST, RETWEET_REQUEST } from \"../constants/post\";\nimport Loading from \"./Loading\";\nimport FollowButton from \"./FollowButton\";\nimport Link from \"next/link\";\nimport moment from \"moment\";\nmoment.locale(\"ko\");\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const open = Boolean(anchorEl);\n  const id = me === null || me === void 0 ? void 0 : me.id; // 이문법과 같음 me && me.id\n\n  const UIid = open ? \"simple-popover\" : undefined;\n  const {\n    0: comment,\n    1: setComment\n  } = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onToggleComment = () => {\n    setComment(prev => !prev);\n  };\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: UNLIKE_BUTTON_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: LIKE_BUTTON_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const OnRetweet = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const liked = post.Likers.find(v => v.id === id);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, moment(post.createdAt).format(\"YYYY년MM월DD a h:mm\")), __jsx(CardHeader, {\n    avatar: __jsx(Link, {\n      href: `/user/${post.User.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      \"aria-label\": \"userImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, post.User.nickname[0]))),\n    title: __jsx(Link, {\n      href: `/user/${post.User.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, post.User.nickname)),\n    action: __jsx(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-describedby\": UIid,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(MoreHorizIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })),\n    subheader: me && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), __jsx(CardMedia, {\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, post.Images[0] && __jsx(PostImages, {\n    images: post.Images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 30\n    }\n  })), post.RetweetId && post.Retweet ? __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, moment(post.createdAt).format(\"YYYY.MM.DD\")), __jsx(CardHeader, {\n    avatar: __jsx(Link, {\n      href: `/user/${post.User.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, __jsx(Avatar, {\n      \"aria-label\": \"userImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, post.Retweet.User.nickname[0]))),\n    title: post.Retweet.User.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), __jsx(CardMedia, {\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, post.Retweet.Images[0] && __jsx(PostImages, {\n    images: post.Retweet.Images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(PostCardContent, {\n    postData: post.Retweet.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }))) : __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(PostCardContent, {\n    postData: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })), __jsx(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"retweet\",\n    onClick: OnRetweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(RepeatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })), liked ? __jsx(IconButton, {\n    \"aria-label\": \"add to favorite\",\n    onClick: onUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  })) : __jsx(IconButton, {\n    \"aria-label\": \"add to favorite\",\n    onClick: onLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(FavoriteBorderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), __jsx(IconButton, {\n    \"aria-label\": \"comment\",\n    onClick: onToggleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(TextsmsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }))), __jsx(Popover, {\n    id: UIid,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"\\uC218\\uC815\"), __jsx(Button, {\n    onClick: onRemovePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, removePostLoading ? __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 40\n    }\n  }) : \"삭제\")) : __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"\\uC2E0\\uACE0\")))), comment && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    subheader: __jsx(ListSubheader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, post.Comments.map(data => __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: `/user/${data.User.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, data.User.nickname[0])))), __jsx(ListItemText, {\n    primary: data.User.nickname,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, data.content)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/nextJs-nodeBird/front/components/PostCard.js"],"names":["Avatar","Button","ButtonGroup","Card","CardActions","CardContent","CardHeader","CardMedia","IconButton","List","ListItem","ListItemAvatar","ListItemText","Popover","Typography","React","useState","useCallback","useEffect","PropTypes","RepeatIcon","FavoriteIcon","FavoriteBorderIcon","TextsmsIcon","MoreHorizIcon","useDispatch","useSelector","PostImages","ListSubheader","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_BUTTON_REQUEST","UNLIKE_BUTTON_REQUEST","RETWEET_REQUEST","Loading","FollowButton","Link","moment","locale","PostCard","post","me","state","user","removePostLoading","anchorEl","setAnchorEl","open","Boolean","id","UIid","undefined","comment","setComment","dispatch","handleClick","event","currentTarget","handleClose","onToggleComment","prev","onRemovePost","alert","type","data","onUnlike","onLike","OnRetweet","liked","Likers","find","v","marginBottom","float","createdAt","format","User","nickname","margin","Images","RetweetId","Retweet","content","color","vertical","horizontal","Comments","length","map","propTypes","shape","number","object","string","arrayOf","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Button,\n  ButtonGroup,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport {\n  REMOVE_POST_REQUEST,\n  LIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_REQUEST,\n  RETWEET_REQUEST,\n} from \"../constants/post\";\nimport Loading from \"./Loading\";\nimport FollowButton from \"./FollowButton\";\nimport Link from \"next/link\";\nimport moment from \"moment\";\n\nmoment.locale(\"ko\");\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const id = me?.id; // 이문법과 같음 me && me.id\n  const UIid = open ? \"simple-popover\" : undefined;\n  const [comment, setComment] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onToggleComment = () => {\n    setComment((prev) => !prev);\n  };\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: REMOVE_POST_REQUEST, data: post.id });\n  }, [id]);\n\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: UNLIKE_BUTTON_REQUEST, data: post.id });\n  }, [id]);\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: LIKE_BUTTON_REQUEST, data: post.id });\n  }, [id]);\n  const OnRetweet = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: RETWEET_REQUEST, data: post.id });\n  }, [id]);\n\n  const liked = post.Likers.find((v) => v.id === id);\n\n  return (\n    <div style={{ marginBottom: 30 }}>\n      <Card>\n        <div style={{ float: \"right\" }}>\n          {moment(post.createdAt).format(\"YYYY년MM월DD a h:mm\")}\n        </div>\n        <CardHeader\n          avatar={\n            <Link href={`/user/${post.User.id}`}>\n              <a>\n                <Avatar aria-label=\"userImg\">{post.User.nickname[0]}</Avatar>\n              </a>\n            </Link>\n          }\n          title={\n            <Link href={`/user/${post.User.id}`}>\n              <a>{post.User.nickname}</a>\n            </Link>\n          }\n          action={\n            <IconButton\n              aria-label=\"more\"\n              aria-describedby={UIid}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              <MoreHorizIcon />\n            </IconButton>\n          }\n          subheader={me && <FollowButton post={post} />}\n        />\n        <CardMedia style={{ margin: \"auto\" }}>\n          {post.Images[0] && <PostImages images={post.Images} />}\n        </CardMedia>\n\n        {/* 리트윗 게물 */}\n        {post.RetweetId && post.Retweet ? (\n          <Card>\n            <div style={{ float: \"right\" }}>\n              {moment(post.createdAt).format(\"YYYY.MM.DD\")}\n            </div>\n            <CardHeader\n              avatar={\n                <Link href={`/user/${post.User.id}`}>\n                  <a>\n                    <Avatar aria-label=\"userImg\">\n                      {post.Retweet.User.nickname[0]}\n                    </Avatar>\n                  </a>\n                </Link>\n              }\n              title={post.Retweet.User.nickname}\n            />\n            <CardMedia style={{ margin: \"auto\" }}>\n              {post.Retweet.Images[0] && (\n                <PostImages images={post.Retweet.Images} />\n              )}\n            </CardMedia>\n            <CardContent>\n              <PostCardContent postData={post.Retweet.content} />\n            </CardContent>\n          </Card>\n        ) : (\n          <CardContent>\n            <PostCardContent postData={post.content} />\n          </CardContent>\n        )}\n\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"retweet\" onClick={OnRetweet}>\n            <RepeatIcon />\n          </IconButton>\n          {liked ? (\n            <IconButton aria-label=\"add to favorite\" onClick={onUnlike}>\n              <FavoriteIcon style={{ color: \"red\" }} />\n            </IconButton>\n          ) : (\n            <IconButton aria-label=\"add to favorite\" onClick={onLike}>\n              <FavoriteBorderIcon />\n            </IconButton>\n          )}\n          <IconButton aria-label=\"comment\" onClick={onToggleComment}>\n            <TextsmsIcon />\n          </IconButton>\n        </CardActions>\n        <Popover\n          id={UIid}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <ButtonGroup>\n            {id && post.User.id === id ? (\n              <>\n                <Button>수정</Button>\n                <Button onClick={onRemovePost}>\n                  {removePostLoading ? <Loading /> : \"삭제\"}\n                </Button>\n              </>\n            ) : (\n              <Button>신고</Button>\n            )}\n          </ButtonGroup>\n        </Popover>\n        {/* <Image />\n        <Content />\n        <Button></Button> */}\n      </Card>\n      {comment && (\n        <div>\n          <CommentForm post={post} />\n\n          <List\n            subheader={\n              <ListSubheader>{post.Comments.length}개의 댓글</ListSubheader>\n            }\n          >\n            {post.Comments.map((data) => (\n              <ListItem>\n                <ListItemAvatar>\n                  <Link href={`/user/${data.User.id}`}>\n                    <a>\n                      <Avatar>{data.User.nickname[0]}</Avatar>\n                    </a>\n                  </Link>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={data.User.nickname}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                      >\n                        {data.content}\n                      </Typography>\n                      {/* {\" — I'll be in your neighborhood doing errands this…\"} */}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}