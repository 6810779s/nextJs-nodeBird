{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174\\u1111\\u1169\\u11AF\\u1103\\u1165/programming/program/react-web/nextJs-nodeBird/front/components/NickNameEditForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Button, Input, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CHANGE_NICKNAME_REQUEST } from \"../constants/user\";\nimport Loading from \"../components/Loading\";\nimport styles from \"../styles/NickNameEditForm.module.scss\";\nimport useInput from \"../hooks/useInput\";\n\nvar NickNameEditForm = function NickNameEditForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput({\n    changeNick: \"\"\n  }),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      changeNick = _useInput2[0],\n      setNickname = _useInput2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      changeNicknameLoading = _useSelector.changeNicknameLoading,\n      changeNicknameDone = _useSelector.changeNicknameDone,\n      changeNicknameFailure = _useSelector.changeNicknameFailure;\n\n  useEffect(function () {\n    if (changeNicknameDone) {\n      changeNick.current.reset = \"\";\n    }\n  }, [changeNicknameDone]);\n  useEffect(function () {\n    if (changeNicknameFailure) {\n      alert(changeNicknameFailure);\n    }\n  }, [changeNicknameFailure]);\n\n  var changeNickName = function changeNickName(e) {\n    e.preventDefault();\n\n    if (changeNick.nickname) {\n      dispatch({\n        type: CHANGE_NICKNAME_REQUEST,\n        data: changeNick.nickname\n      });\n    } else {\n      alert(\"변경할 닉네임을 입력해 주세요.\");\n    }\n  };\n\n  return __jsx(Paper, {\n    className: styles.container,\n    component: \"form\",\n    onSubmit: changeNickName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    className: styles.inputStyle,\n    name: \"nickname\",\n    id: \"nickname\",\n    value: changeNick.nickname,\n    onChange: setNickname,\n    placeholder: \"\\uB2C9\\uB124\\uC784\",\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, changeNicknameLoading ? __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 34\n    }\n  }) : \"수정\"));\n};\n\n_s(NickNameEditForm, \"Pa6B1fyPxWP7BzhD6ImEJOeW8iM=\", false, function () {\n  return [useDispatch, useInput, useSelector];\n});\n\n_c = NickNameEditForm;\nexport default NickNameEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NickNameEditForm\");","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/components/NickNameEditForm.js"],"names":["React","useEffect","Button","Input","Paper","useDispatch","useSelector","CHANGE_NICKNAME_REQUEST","Loading","styles","useInput","NickNameEditForm","dispatch","changeNick","setNickname","state","user","changeNicknameLoading","changeNicknameDone","changeNicknameFailure","current","reset","alert","changeNickName","e","preventDefault","nickname","type","data","container","inputStyle"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,mBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC7B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,kBAAkCK,QAAQ,CAAC;AAAEG,IAAAA,UAAU,EAAE;AAAd,GAAD,CAA1C;AAAA;AAAA,MAAOA,UAAP;AAAA,MAAmBC,WAAnB;;AACA,qBACER,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADb;AAAA,MAAQC,qBAAR,gBAAQA,qBAAR;AAAA,MAA+BC,kBAA/B,gBAA+BA,kBAA/B;AAAA,MAAmDC,qBAAnD,gBAAmDA,qBAAnD;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiB,kBAAJ,EAAwB;AACtBL,MAAAA,UAAU,CAACO,OAAX,CAAmBC,KAAnB,GAA2B,EAA3B;AACD;AACF,GAJQ,EAIN,CAACH,kBAAD,CAJM,CAAT;AAKAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,qBAAJ,EAA2B;AACzBG,MAAAA,KAAK,CAACH,qBAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,qBAAD,CAJM,CAAT;;AAKA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIZ,UAAU,CAACa,QAAf,EAAyB;AACvBd,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAEpB,uBADC;AAEPqB,QAAAA,IAAI,EAAEf,UAAU,CAACa;AAFV,OAAD,CAAR;AAID,KALD,MAKO;AACLJ,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,GAVD;;AAYA,SACE,MAAC,KAAD;AACE,IAAA,SAAS,EAAEb,MAAM,CAACoB,SADpB;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,QAAQ,EAAEN,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,SAAS,EAAEd,MAAM,CAACqB,UADpB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,KAAK,EAAEjB,UAAU,CAACa,QAJpB;AAKE,IAAA,QAAQ,EAAEZ,WALZ;AAME,IAAA,WAAW,EAAC,oBANd;AAOE,IAAA,IAAI,EAAC,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAcE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,qBAAqB,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IADzC,CAdF,CADF;AAoBD,CA/CD;;GAAMN,gB;UACaN,W,EACiBK,Q,EAEhCJ,W;;;KAJEK,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, Input, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CHANGE_NICKNAME_REQUEST } from \"../constants/user\";\nimport Loading from \"../components/Loading\";\nimport styles from \"../styles/NickNameEditForm.module.scss\";\nimport useInput from \"../hooks/useInput\";\n\nconst NickNameEditForm = () => {\n  const dispatch = useDispatch();\n  const [changeNick, setNickname] = useInput({ changeNick: \"\" });\n  const { changeNicknameLoading, changeNicknameDone, changeNicknameFailure } =\n    useSelector((state) => state.user);\n  useEffect(() => {\n    if (changeNicknameDone) {\n      changeNick.current.reset = \"\";\n    }\n  }, [changeNicknameDone]);\n  useEffect(() => {\n    if (changeNicknameFailure) {\n      alert(changeNicknameFailure);\n    }\n  }, [changeNicknameFailure]);\n  const changeNickName = (e) => {\n    e.preventDefault();\n    if (changeNick.nickname) {\n      dispatch({\n        type: CHANGE_NICKNAME_REQUEST,\n        data: changeNick.nickname,\n      });\n    } else {\n      alert(\"변경할 닉네임을 입력해 주세요.\");\n    }\n  };\n\n  return (\n    <Paper\n      className={styles.container}\n      component=\"form\"\n      onSubmit={changeNickName}\n    >\n      <input\n        className={styles.inputStyle}\n        name=\"nickname\"\n        id=\"nickname\"\n        value={changeNick.nickname}\n        onChange={setNickname}\n        placeholder=\"닉네임\"\n        type=\"text\"\n      />\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n        {changeNicknameLoading ? <Loading /> : \"수정\"}\n      </Button>\n    </Paper>\n  );\n};\n\nexport default NickNameEditForm;\n"]},"metadata":{},"sourceType":"module"}