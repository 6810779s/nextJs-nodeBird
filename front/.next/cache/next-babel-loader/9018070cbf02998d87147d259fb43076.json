{"ast":null,"code":"import { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_ME, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE, UNLIKE_BUTTON_REQUEST, UNLIKE_BUTTON_SUCCESS, UNLIKE_BUTTON_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likeButtonAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likeButton(action) {\n  try {\n    const result = yield call(likeButtonAPI, action.data);\n    console.log(result); //result에 postid와 userid가 들어가 있음\n\n    yield put({\n      type: LIKE_BUTTON_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(\"likeerror\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LIKE_BUTTON_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikeButtonAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikeButton(action) {\n  try {\n    const result = yield call(unlikeButtonAPI, action.data);\n    yield put({\n      type: UNLIKE_BUTTON_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UNLIKE_BUTTON_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* warchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikeButton() {\n  yield takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n}\n\nfunction* watchUnlikeButton() {\n  yield takeLatest(UNLIKE_BUTTON_REQUEST, unlikeButton);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComments), fork(warchRemovePost), fork(warchLoadPost), fork(watchLikeButton), fork(watchUnlikeButton), fork(watchUploadImages), fork(watchRetweet)]);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/post.js"],"names":["LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","all","fork","put","takeLatest","delay","call","axios","addPostAPI","data","post","addPost","action","result","type","id","err","error","response","removePostAPI","delete","removePost","console","addCommentsAPI","postId","addComments","loadPostAPI","get","loadPost","likeButtonAPI","patch","likeButton","log","unlikeButtonAPI","unlikeButton","uploadImagesAPI","uploadImages","watchAddPost","warchRemovePost","watchAddComments","warchLoadPost","watchLikeButton","watchUnlikeButton","watchUploadImages","postSaga","watchRetweet"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,oBATF,EAUEC,cAVF,EAWEC,iBAXF,EAYEC,mBAZF,EAaEC,mBAbF,EAcEC,mBAdF,EAeEC,mBAfF,EAgBEC,mBAhBF,EAiBEC,mBAjBF,EAkBEC,qBAlBF,EAmBEC,qBAnBF,EAoBEC,qBApBF,EAqBEC,qBArBF,EAsBEC,qBAtBF,EAuBEC,qBAvBF,QAwBO,mBAxBP;AAyBA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,OAAX,EAAoBD,IAApB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACE,UAAD,EAAaI,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEhC,gBADE;AAER2B,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAIA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE3B,cADE;AAERsB,MAAAA,IAAI,EAAEI,MAAM,CAACJ,IAAP,CAAYM;AAFV,KAAD,CAAT;AAID,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZ,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAE/B,gBAFE;AAGRkC,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,SAASU,aAAT,CAAuBV,IAAvB,EAA6B;AAC3B,SAAOF,KAAK,CAACa,MAAN,CAAc,SAAQX,IAAK,EAA3B,CAAP;AACD;;AAED,UAAUY,UAAV,CAAqBT,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACa,aAAD,EAAgBP,MAAM,CAACH,IAAvB,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAExB,mBADE;AAERmB,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAIA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE1B,iBADE;AAERqB,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAVD,CAUE,OAAOO,GAAP,EAAY;AACZM,IAAAA,OAAO,CAACL,KAAR,CAAc,MAAd,EAAsBD,GAAtB;AACA,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAEvB,mBAFE;AAGR0B,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,SAASc,cAAT,CAAwBd,IAAxB,EAA8B;AAC5B,SAAOF,KAAK,CAACG,IAAN,CAAY,SAAQD,IAAI,CAACe,MAAO,UAAhC,EAA2Cf,IAA3C,CAAP;AACD;;AAED,UAAUgB,WAAV,CAAsBb,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACiB,cAAD,EAAiBX,MAAM,CAACH,IAAxB,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE7B,oBADE;AAERwB,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOO,GAAP,EAAY;AACZM,IAAAA,OAAO,CAACL,KAAR,CAAcD,GAAd;AACA,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAE5B,oBAFE;AAGR+B,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,SAASiB,WAAT,CAAqBjB,IAArB,EAA2B;AACzB,SAAOF,KAAK,CAACoB,GAAN,CAAW,QAAX,EAAoBlB,IAApB,CAAP;AACD;;AAED,UAAUmB,QAAV,CAAmBhB,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACoB,WAAD,EAAcd,MAAM,CAACH,IAArB,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEnC,iBADE;AAER8B,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOO,GAAP,EAAY;AACZ,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAElC,iBAFE;AAGRqC,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,SAASoB,aAAT,CAAuBpB,IAAvB,EAA6B;AAC3B,SAAOF,KAAK,CAACuB,KAAN,CAAa,SAAQrB,IAAK,OAA1B,CAAP;AACD;;AAED,UAAUsB,UAAV,CAAqBnB,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACuB,aAAD,EAAgBjB,MAAM,CAACH,IAAvB,CAAzB;AACAa,IAAAA,OAAO,CAACU,GAAR,CAAYnB,MAAZ,EAFE,CAGF;;AACA,UAAMV,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAErB,mBADE;AAERgB,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GARD,CAQE,OAAOO,GAAP,EAAY;AACZM,IAAAA,OAAO,CAACL,KAAR,CAAc,WAAd,EAA2BD,GAA3B;AACA,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAEpB,mBAFE;AAGRuB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,SAASwB,eAAT,CAAyBxB,IAAzB,EAA+B;AAC7B,SAAOF,KAAK,CAACa,MAAN,CAAc,SAAQX,IAAK,OAA3B,CAAP;AACD;;AAED,UAAUyB,YAAV,CAAuBtB,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAAC2B,eAAD,EAAkBrB,MAAM,CAACH,IAAzB,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAElB,qBADE;AAERa,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOO,GAAP,EAAY;AACZM,IAAAA,OAAO,CAACL,KAAR,CAAcD,GAAd;AACA,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAEjB,qBAFE;AAGRoB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,SAAS0B,eAAT,CAAyB1B,IAAzB,EAA+B;AAC7B,SAAOF,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACD;;AAED,UAAU2B,YAAV,CAAuBxB,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAAC6B,eAAD,EAAkBvB,MAAM,CAACH,IAAzB,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEf,qBADE;AAERU,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOO,GAAP,EAAY;AACZM,IAAAA,OAAO,CAACL,KAAR,CAAcD,GAAd;AACA,UAAMb,GAAG,CAAC;AACR;AACAW,MAAAA,IAAI,EAAEd,qBAFE;AAGRiB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAHZ,KAAD,CAAT;AAKD;AACF;;AAED,UAAU4B,YAAV,GAAyB;AACvB,QAAMjC,UAAU,CAACvB,gBAAD,EAAmB8B,OAAnB,CAAhB;AACD;;AAED,UAAU2B,eAAV,GAA4B;AAC1B,QAAMlC,UAAU,CAACf,mBAAD,EAAsBgC,UAAtB,CAAhB;AACD;;AAED,UAAUkB,gBAAV,GAA6B;AAC3B,QAAMnC,UAAU,CAACpB,oBAAD,EAAuByC,WAAvB,CAAhB;AACD;;AAED,UAAUe,aAAV,GAA0B;AACxB,QAAMpC,UAAU,CAAC1B,iBAAD,EAAoBkD,QAApB,CAAhB;AACD;;AAED,UAAUa,eAAV,GAA4B;AAC1B,QAAMrC,UAAU,CAACZ,mBAAD,EAAsBuC,UAAtB,CAAhB;AACD;;AAED,UAAUW,iBAAV,GAA8B;AAC5B,QAAMtC,UAAU,CAACT,qBAAD,EAAwBuC,YAAxB,CAAhB;AACD;;AAED,UAAUS,iBAAV,GAA8B;AAC5B,QAAMvC,UAAU,CAACN,qBAAD,EAAwBsC,YAAxB,CAAhB;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAM3C,GAAG,CAAC,CACRC,IAAI,CAACmC,YAAD,CADI,EAERnC,IAAI,CAACqC,gBAAD,CAFI,EAGRrC,IAAI,CAACoC,eAAD,CAHI,EAIRpC,IAAI,CAACsC,aAAD,CAJI,EAKRtC,IAAI,CAACuC,eAAD,CALI,EAMRvC,IAAI,CAACwC,iBAAD,CANI,EAORxC,IAAI,CAACyC,iBAAD,CAPI,EAQRzC,IAAI,CAAC2C,YAAD,CARI,CAAD,CAAT;AAUD","sourcesContent":["import {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  ADD_POST_TO_ME,\n  REMOVE_POST_OF_ME,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n} from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeButtonAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likeButton(action) {\n  try {\n    const result = yield call(likeButtonAPI, action.data);\n    console.log(result);\n    //result에 postid와 userid가 들어가 있음\n    yield put({\n      type: LIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(\"likeerror\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikeButtonAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikeButton(action) {\n  try {\n    const result = yield call(unlikeButtonAPI, action.data);\n    yield put({\n      type: UNLIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UNLIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* warchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikeButton() {\n  yield takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n}\n\nfunction* watchUnlikeButton() {\n  yield takeLatest(UNLIKE_BUTTON_REQUEST, unlikeButton);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComments),\n    fork(warchRemovePost),\n    fork(warchLoadPost),\n    fork(watchLikeButton),\n    fork(watchUnlikeButton),\n    fork(watchUploadImages),\n    fork(watchRetweet),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}