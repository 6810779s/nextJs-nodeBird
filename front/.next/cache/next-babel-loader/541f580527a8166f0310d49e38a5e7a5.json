{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174\\u1111\\u1169\\u11AF\\u1103\\u1165/programming/program/react-web/nextJs-nodeBird/front/pages/hashtag/[tag].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_USER_REQUEST } from \"../../constants/user\";\nimport Head from \"next/head\";\nimport { Avatar, Divider, Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\nvar useStyles = makeStyles({\n  profileWrap: {\n    maxWidth: \"500px\",\n    margin: \"auto\",\n    padding: \"30px\"\n  },\n  typographyBox: {\n    width: \"55px\",\n    background: \"#E6E6E6\",\n    textAlign: \"center\"\n  },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\"\n  }\n});\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostLoading = _useSelector.loadPostLoading;\n\n  var _useInView = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true\n  }),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  var router = useRouter();\n  var tag = router.query.tag;\n  useEffect(function () {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      var _mainPosts;\n\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        lastId: lastId,\n        data: tag\n      });\n    }\n  }, [inView]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, tag, \" \\uAD00\\uB828 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\".concat(tag, \"\\uAD00\\uB828 \\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(tag, \"\\uAD00\\uB828 \\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\".concat(tag, \"\\uAD00\\uB828 \\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), mainPosts.map(function (post) {\n    var _mainPosts2;\n\n    return (// <PostCard post={post} key={post.id} />\n      __jsx(React.Fragment, {\n        key: post.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, __jsx(PostCard, {\n        post: post,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }), post.id === ((_mainPosts2 = mainPosts[mainPosts.length - 1]) === null || _mainPosts2 === void 0 ? void 0 : _mainPosts2.id) && hasMorePosts ? __jsx(\"div\", {\n        ref: ref,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, __jsx(Loading, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      })) : \"\")\n    );\n  }));\n};\n\n_s(Hashtag, \"DIJeUhDoVXDsZH4py3Ig20I2mfI=\", false, function () {\n  return [useDispatch, useSelector, useInView, useRouter];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useCallback","useRouter","useInView","useDispatch","useSelector","AppLayout","LOAD_HASHTAG_POSTS_REQUEST","LOAD_USER_POSTS_REQUEST","LOAD_USER_REQUEST","Head","Avatar","Divider","Card","CardContent","CardHeader","Typography","makeStyles","PostCard","Loading","useStyles","profileWrap","maxWidth","margin","padding","typographyBox","width","background","textAlign","cardLayout","Hashtag","dispatch","state","post","mainPosts","hasMorePosts","loadPostLoading","threshold","triggerOnce","unobserveOnEnter","delay","trackVisibility","ref","inView","router","tag","query","lastId","length","id","type","data","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport {\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_USER_POSTS_REQUEST,\n} from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport {\n  Avatar,\n  Divider,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\n\nconst useStyles = makeStyles({\n  profileWrap: { maxWidth: \"500px\", margin: \"auto\", padding: \"30px\" },\n  typographyBox: { width: \"55px\", background: \"#E6E6E6\", textAlign: \"center\" },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\",\n  },\n});\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n    (state) => state.post\n  );\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n  const router = useRouter();\n  const { tag } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        lastId,\n        data: tag,\n      });\n    }\n  }, [inView]);\n  return (\n    <AppLayout>\n      <Head>\n        <title>{tag} 관련 글</title>\n        <meta name=\"description\" content={`${tag}관련 글`} />\n        <meta property=\"og:title\" content={`${tag}관련 글`} />\n        <meta property=\"og:description\" content={`${tag}관련 글`} />\n        {/* <meta property=\"og:image\" content={singlePost.Images[0]?singlePost.Images[0].src:\"https://nodebird.com/favicon.icon\"}/>\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`}/> */}\n      </Head>\n      {mainPosts.map((post) => (\n        // <PostCard post={post} key={post.id} />\n        <React.Fragment key={post.id}>\n          <PostCard post={post} />\n          {post.id === mainPosts[mainPosts.length - 1]?.id && hasMorePosts ? (\n            <div ref={ref}>\n              <Loading />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </React.Fragment>\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: context.params.tag,\n    });\n\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}