{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport Head from \"next/head\";\nimport { Avatar, Divider, Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\nvar useStyles = makeStyles({\n  profileWrap: {\n    maxWidth: \"500px\",\n    margin: \"auto\",\n    padding: \"30px\"\n  },\n  typographyBox: {\n    width: \"55px\",\n    background: \"#E6E6E6\",\n    textAlign: \"center\"\n  },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\"\n  }\n});\n\nvar User = function User() {\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostLoading = _useSelector2.loadPostLoading;\n\n  var _useInView = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true\n  }),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      var _mainPosts;\n\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId: lastId,\n        data: id\n      });\n    }\n  }, [inView]);\n  return __jsx(AppLayout, null, userInfo && __jsx(Head, null, __jsx(\"title\", null, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  })), userInfo ? __jsx(Card, {\n    className: classes.cardLayout\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"userProfile\"\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname\n  }), __jsx(CardContent, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }\n  }, __jsx(Typography, {\n    className: classes.typographyBox\n  }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\"\n  }), __jsx(Typography, {\n    className: classes.typographyBox\n  }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\"\n  }), __jsx(Typography, {\n    className: classes.typographyBox\n  }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings))) : \"\", mainPosts.map(function (post) {\n    var _mainPosts2;\n\n    return (// <PostCard post={post} key={post.id} />\n      __jsx(React.Fragment, {\n        key: post.id\n      }, __jsx(PostCard, {\n        post: post\n      }), post.id === ((_mainPosts2 = mainPosts[mainPosts.length - 1]) === null || _mainPosts2 === void 0 ? void 0 : _mainPosts2.id) && hasMorePosts ? __jsx(\"div\", {\n        ref: ref\n      }, __jsx(Loading, null)) : \"\")\n    );\n  }));\n};\n\nexport var __N_SSP = true;\nexport default User;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/nextJs-nodeBird/front/pages/user/[id].js"],"names":["React","useEffect","useCallback","useRouter","useInView","useDispatch","useSelector","AppLayout","LOAD_USER_POSTS_REQUEST","Head","Avatar","Divider","Card","CardContent","CardHeader","Typography","makeStyles","PostCard","Loading","useStyles","profileWrap","maxWidth","margin","padding","typographyBox","width","background","textAlign","cardLayout","User","dispatch","classes","state","user","userInfo","post","mainPosts","hasMorePosts","loadPostLoading","threshold","triggerOnce","unobserveOnEnter","delay","trackVisibility","ref","inView","router","id","query","lastId","length","type","data","nickname","display","justifyContent","Posts","height","Followers","Followings","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport {\n  Avatar,\n  Divider,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\n\nconst useStyles = makeStyles({\n  profileWrap: { maxWidth: \"500px\", margin: \"auto\", padding: \"30px\" },\n  typographyBox: { width: \"55px\", background: \"#E6E6E6\", textAlign: \"center\" },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\",\n  },\n});\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { userInfo } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n    (state) => state.post\n  );\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id,\n      });\n    }\n  }, [inView]);\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>{userInfo.nickname}님의 글</title>\n          <meta\n            name=\"description\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:title\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:description\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          {/* <meta property=\"og:image\" content={singlePost.Images[0]?singlePost.Images[0].src:\"https://nodebird.com/favicon.icon\"}/>\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`}/> */}\n        </Head>\n      )}\n      {userInfo ? (\n        <Card className={classes.cardLayout}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"userProfile\">{userInfo.nickname[0]}</Avatar>\n            }\n            title={userInfo.nickname}\n          />\n          <CardContent\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography className={classes.typographyBox}>\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        \"\"\n      )}\n      {mainPosts.map((post) => (\n        // <PostCard post={post} key={post.id} />\n        <React.Fragment key={post.id}>\n          <PostCard post={post} />\n          {post.id === mainPosts[mainPosts.length - 1]?.id && hasMorePosts ? (\n            <div ref={ref}>\n              <Loading />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </React.Fragment>\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: context.params.id,\n    });\n``\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}