{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import thunkMiddleware from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar loggerMidleware = function loggerMidleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      next(action);\n      return;\n    };\n  };\n}; //action 실행전 콘솔로그를 찍어주는 미들웨어\n\n\nvar configureStore = function configureStore() {\n  // const store = createStore(rootReducer, composeWithDevTools());\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMidleware];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //개발용\n\n  var store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}