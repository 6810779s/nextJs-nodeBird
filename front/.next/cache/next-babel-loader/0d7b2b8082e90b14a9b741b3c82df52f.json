{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addComments),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadUserPosts),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(loadHashtagPosts),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(likeButton),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(unlikeButton),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(retweet),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(warchRemovePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComments),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUserPosts),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadHashtagPosts),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPost),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikeButton),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikeButton),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchRetweet),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_ME, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE, UNLIKE_BUTTON_REQUEST, UNLIKE_BUTTON_SUCCESS, UNLIKE_BUTTON_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_HASHTAG_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE } from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 8:\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"err:\", _context2.t0);\n          _context2.next = 15;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: REMOVE_POST_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComments(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComments$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(addCommentsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: ADD_COMMENTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: ADD_COMMENTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadPostsAPI, action.lastId);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_POSTS_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(\"/user/\".concat(data, \"/posts/?lastId=\").concat(lastId || 0));\n}\n\nfunction loadUserPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUserPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadUserPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_USER_POSTS_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(\"/hashtag/\".concat(data, \"?lastId=\").concat(lastId || 0));\n}\n\nfunction loadHashtagPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadHashtagPosts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(loadHashtagPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/post/\".concat(data));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_POST_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction likeButtonAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likeButton(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likeButton$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(likeButtonAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LIKE_BUTTON_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(\"likeerror\", _context8.t0);\n          _context8.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LIKE_BUTTON_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction unlikeButtonAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikeButton(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikeButton$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(unlikeButtonAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: UNLIKE_BUTTON_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: UNLIKE_BUTTON_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context10.sent;\n          _context10.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context10.next = 13;\n          break;\n\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n          _context10.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context10.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 8]]);\n}\n\nfunction retweetAPI(data) {\n  return axios.post(\"/post/\".concat(data, \"/retweet\"), data);\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function retweet$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(retweetAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: RETWEET_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction warchRemovePost() {\n  return _regeneratorRuntime.wrap(function warchRemovePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchAddComments() {\n  return _regeneratorRuntime.wrap(function watchAddComments$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_COMMENTS_REQUEST, addComments);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchLoadUserPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadUserPosts$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchLoadHashtagPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadHashtagPosts$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchLikeButton() {\n  return _regeneratorRuntime.wrap(function watchLikeButton$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n\nfunction watchUnlikeButton() {\n  return _regeneratorRuntime.wrap(function watchUnlikeButton$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(UNLIKE_BUTTON_REQUEST, unlikeButton);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime.wrap(function watchRetweet$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComments), fork(warchRemovePost), fork(watchLoadPosts), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchLoadPost), fork(watchLikeButton), fork(watchUnlikeButton), fork(watchUploadImages), fork(watchRetweet)]);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/post.js"],"names":["addPost","removePost","addComments","loadPosts","loadUserPosts","loadHashtagPosts","loadPost","likeButton","unlikeButton","uploadImages","retweet","watchAddPost","warchRemovePost","watchAddComments","watchLoadPosts","watchLoadUserPosts","watchLoadHashtagPosts","watchLoadPost","watchLikeButton","watchUnlikeButton","watchUploadImages","watchRetweet","postSaga","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_HASHTAG_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","all","fork","put","takeLatest","delay","call","axios","addPostAPI","data","post","action","result","type","id","error","response","removePostAPI","console","addCommentsAPI","postId","loadPostsAPI","lastId","get","loadUserPostsAPI","loadHashtagPostsAPI","loadPostAPI","likeButtonAPI","patch","unlikeButtonAPI","uploadImagesAPI","retweetAPI"],"mappings":"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","sourcesContent":["import {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  ADD_POST_TO_ME,\n  REMOVE_POST_OF_ME,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n} from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts/?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${data}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeButtonAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likeButton(action) {\n  try {\n    const result = yield call(likeButtonAPI, action.data);\n    //result에 postid와 userid가 들어가 있음\n    yield put({\n      type: LIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(\"likeerror\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikeButtonAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikeButton(action) {\n  try {\n    const result = yield call(unlikeButtonAPI, action.data);\n    yield put({\n      type: UNLIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UNLIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: RETWEET_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikeButton() {\n  yield takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n}\n\nfunction* watchUnlikeButton() {\n  yield takeLatest(UNLIKE_BUTTON_REQUEST, unlikeButton);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComments),\n    fork(warchRemovePost),\n    fork(watchLoadPosts),\n    fork(watchLoadUserPosts),\n    fork(watchLoadHashtagPosts),\n    fork(watchLoadPost),\n    fork(watchLikeButton),\n    fork(watchUnlikeButton),\n    fork(watchUploadImages),\n    fork(watchRetweet),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}