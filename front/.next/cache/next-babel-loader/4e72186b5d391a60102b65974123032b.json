{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\n// import shortId from \"shortid\";\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE, UNLIKE_BUTTON_REQUEST, UNLIKE_BUTTON_SUCCESS, UNLIKE_BUTTON_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, REMOVE_IMAGE } from \"../constants/post\";\nimport produce from \"immer\"; // import faker from \"faker\";\n\nexport var initialState = (_initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null\n}, _defineProperty(_initialState, \"loadPostLoading\", false), _defineProperty(_initialState, \"loadPostDone\", false), _defineProperty(_initialState, \"loadPostFailure\", null), _defineProperty(_initialState, \"addPostLoading\", false), _defineProperty(_initialState, \"addPostDone\", false), _defineProperty(_initialState, \"addPostFailure\", null), _defineProperty(_initialState, \"removePostLoading\", false), _defineProperty(_initialState, \"removePostDone\", false), _defineProperty(_initialState, \"removePostFailure\", null), _defineProperty(_initialState, \"addCommentsLoading\", false), _defineProperty(_initialState, \"addCommentsDone\", false), _defineProperty(_initialState, \"addCommentsFailure\", null), _defineProperty(_initialState, \"likeButtonLoading\", false), _defineProperty(_initialState, \"likeButtonDone\", false), _defineProperty(_initialState, \"likeButtonFailure\", null), _defineProperty(_initialState, \"unlikeButtonLoading\", false), _defineProperty(_initialState, \"unlikeButtonDone\", false), _defineProperty(_initialState, \"unlikeButtonFailure\", null), _defineProperty(_initialState, \"uploadImagesLoading\", false), _defineProperty(_initialState, \"uploadImagesDone\", false), _defineProperty(_initialState, \"uploadImagesFailure\", null), _defineProperty(_initialState, \"retweetLoading\", false), _defineProperty(_initialState, \"retweetDone\", false), _defineProperty(_initialState, \"retweetFailure\", null), _initialState); // export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComments = function addComments(data) {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data: data\n  };\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n\n      case LIKE_BUTTON_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likeButtonLoading = false;\n          draft.likeButtonDone = true;\n          break;\n        }\n\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n\n      case UNLIKE_BUTTON_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikeButtonLoading = false;\n          draft.unlikeButtonDone = true;\n          break;\n        }\n\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostFailure = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostFailure = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n\n      case ADD_COMMENTS_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/reducers/post.js"],"names":["LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostLoading","loadPostDone","loadPostFailure","addPost","data","type","addComments","rootReducer","state","action","draft","filter","v","i","retweetLoading","retweetDone","retweetFailure","unshift","error","uploadImagesLoading","uploadImagesDone","uploadImagesFailure","likeButtonLoading","likeButtonDone","likeButtonFailure","post","find","id","PostId","Likers","push","UserId","unlikeButtonLoading","unlikeButtonDone","unlikeButtonFailure","length","concat","addPostLoading","addPostDone","addPostFailure","addCommentsLoading","addCommentsDone","addCommentsFailure","Comments","removePostLoading","removePostDone","removePostFailure","removePostLoadin"],"mappings":"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","sourcesContent":["// import shortId from \"shortid\";\nimport {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  REMOVE_IMAGE,\n} from \"../constants/post\";\nimport produce from \"immer\";\n// import faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostFailure: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostFailure: null,\n  addCommentsLoading: false,\n  addCommentsDone: false,\n  addCommentsFailure: null,\n  likeButtonLoading: false,\n  likeButtonDone: false,\n  likeButtonFailure: null,\n  unlikeButtonLoading: false,\n  unlikeButtonDone: false,\n  unlikeButtonFailure: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesFailure: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetFailure: null,\n};\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport const addPost = (data) => {\n  return {\n    type: ADD_POST_REQUEST,\n    data,\n  };\n};\n\nexport const addComments = (data) => {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data,\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n      case LIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likeButtonLoading = false;\n        draft.likeButtonDone = true;\n        break;\n      }\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n      case UNLIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonDone = true;\n        break;\n      }\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostFailure = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostFailure = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n      case ADD_COMMENTS_SUCCESS:\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}