{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Box, Button, Input } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENTS_REQUEST } from \"../constants/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: comment,\n    1: setComment\n  } = useState(\"\");\n  const commentText = useRef(null);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentsDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentsDone) {\n      setComment(\"\");\n    }\n  }, [addCommentsDone]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    if (data.get(\"commentInput\")) {\n      dispatch({\n        type: ADD_COMMENTS_REQUEST,\n        data: {\n          content: data.get(\"commentInput\"),\n          postId: post.id,\n          userId: id\n        }\n      });\n    }\n  };\n\n  const onChangeComment = e => {\n    setComment(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    style: {\n      display: \"flex\",\n      marginTop: \"20px\"\n    }\n  }, __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    id: \"commentInput\",\n    name: \"commentInput\",\n    value: comment,\n    onChange: onChangeComment,\n    placeholder: \"\\uB313\\uAE00 \\uB2EC\\uAE30...\",\n    type: \"text\",\n    ref: commentText\n  }), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    style: {\n      height: \"30px\"\n    }\n  }, \"\\uAC8C\\uC2DC\")));\n};\n\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}