{"ast":null,"code":"var __jsx = React.createElement;\nimport \"date-fns\";\nimport { Avatar, Box, Button, Checkbox, Container, CssBaseline, FormControlLabel, FormHelperText, Grid, TextField, Typography } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Link from \"next/link\";\nimport { Copyright } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUpRequestAction } from \"../reducers/user\";\nimport Loading from \"./Loading\";\nimport Router from \"next/router\"; // import {\n//   MuiPickersUtilsProvider,\n//   KeyboardDatePicker,\n// } from '@material-ui/pickers';\n\nvar useStyles = makeStyles({});\n\nvar SignUpForm = function SignUpForm() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpLoading = _useSelector.signUpLoading,\n      signUpDone = _useSelector.signUpDone;\n\n  var _useState = useState(false),\n      checkState = _useState[0],\n      setCheckState = _useState[1];\n\n  var _useState2 = useState(false),\n      signUpState = _useState2[0],\n      setSignUpState = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      selectedDate = _useState3[0],\n      handleDateChange = _useState3[1];\n\n  useEffect(function () {\n    if (signUpDone) {\n      Router.push(\"/\");\n    }\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var data = new FormData(event.currentTarget);\n\n    if (data.get(\"firstName\") && data.get(\"lastName\") && data.get(\"userEmail\") && data.get(\"password\") && checkState) {\n      setSignUpState(true);\n      dispatch(signUpRequestAction({\n        email: data.get(\"userEmail\"),\n        password: data.get(\"password\"),\n        nickname: \"\".concat(data.get(\"firstName\"), \" \").concat(data.get(\"lastName\"))\n      }));\n    } else {\n      setSignUpState(false);\n    }\n  };\n\n  var checkBoxState = useCallback(function (e) {\n    if (e.target.checked) {\n      setCheckState(true);\n    } else {\n      setCheckState(false);\n    }\n  }, []);\n  return __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\"\n  }, __jsx(CssBaseline, null), __jsx(Box, {\n    sx: {\n      marginTop: 8,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  }, __jsx(Avatar, {\n    style: {\n      background: \"red\"\n    }\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\"\n  }, \"Sign up\"), __jsx(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      mt: 3\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(TextField, {\n    autoComplete: \"given-name\",\n    name: \"firstName\",\n    required: true,\n    fullWidth: true,\n    id: \"firstName\",\n    label: \"First Name\",\n    autoFocus: true\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    id: \"lastName\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    autoComplete: \"family-name\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    id: \"date\",\n    name: \"date\",\n    label: \"Birthday\",\n    type: \"date\",\n    defaultValue: \"2022-01-01\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      width: \"100%\"\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    type: \"email\",\n    id: \"userEmail\",\n    label: \"Email\",\n    name: \"userEmail\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"new-password\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      onChange: checkBoxState\n    }),\n    label: \"\\uAC1C\\uC778\\uC815\\uBCF4 \\uC81C\\uACF5\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n  }), !checkState && __jsx(FormHelperText, {\n    style: {\n      color: \"red\"\n    }\n  }, \"* \\uC704 \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uB97C \\uD558\\uC154\\uC57C \\uB429\\uB2C8\\uB2E4.\"))), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    sx: {\n      mt: 3,\n      mb: 2\n    }\n  }, signUpLoading ? __jsx(Loading, null) : \"Sign Up\"), signUpState ? __jsx(\"div\", null, \"Go!\") : __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uBAA8\\uB4E0 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"), __jsx(Grid, {\n    container: true,\n    justifyContent: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: \"#\",\n    variant: \"body2\"\n  }, \"Already have an account? Sign in\"))))), __jsx(Copyright, {\n    sx: {\n      mt: 5\n    }\n  }));\n};\n\nexport default SignUpForm;","map":null,"metadata":{},"sourceType":"module"}