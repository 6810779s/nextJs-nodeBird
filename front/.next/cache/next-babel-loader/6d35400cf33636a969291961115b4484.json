{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174\\u1111\\u1169\\u11AF\\u1103\\u1165/programming/program/react-web/nextJs-nodeBird/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\nimport styles from \"../styles/Postform.module.scss\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch(); //   const imageInput = useRef();\n\n  const [textAreaValue, setTextAreaValue] = useInput({});\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      textAreaValue.text = \"\";\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const formData = new FormData();\n    imagePaths.forEach(i => {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", textAreaValue.text);\n\n    if (textAreaValue.text !== \"\" || imagePaths.length !== 0) {\n      return dispatch(addPost(formData));\n    }\n\n    if (textAreaValue.text == \"\") {\n      alert(\"내용을 입력하세요.\");\n    }\n  };\n\n  const onChangeImage = useCallback(e => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.textAreaWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"textarea\", {\n    className: styles.textAreaStyle,\n    name: \"text\",\n    id: \"text\",\n    \"aria-label\": \"minimum height\",\n    value: textAreaValue,\n    onChange: setTextAreaValue,\n    minRows: 5,\n    placeholder: \"\\uC7AC\\uBBF8\\uC788\\uB294 \\uC77C\\uC0C1\\uC744 \\uC0AC\\uB78C\\uB4E4\\uACFC \\uACF5\\uC720\\uD574\\uBCF4\\uC544\\uC694.\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    ref: imageInput,\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    onChange: onChangeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    className: styles.insertImgBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(ImageOutlinedIcon, {\n    className: styles.insertImgIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }))), __jsx(Button, {\n    type: \"submit\",\n    className: styles.addPostBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"\\uAC8C\\uC2DC\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/components/PostForm.js"],"names":["Box","Button","Input","TextareaAutosize","React","useCallback","useState","useEffect","useRef","useDispatch","useSelector","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","addPost","styles","ImageOutlinedIcon","useInput","PostForm","dispatch","textAreaValue","setTextAreaValue","imagePaths","addPostDone","state","post","text","imageInput","handleSubmit","e","preventDefault","data","FormData","currentTarget","formData","forEach","i","append","length","alert","onChangeImage","imageFormData","call","target","files","f","type","onClickImageUpload","current","click","onRemoveImage","index","textAreaWrap","textAreaStyle","buttonStyle","insertImgBtn","insertImgIcon","addPostBtn","map","v","display","width"],"mappings":"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","sourcesContent":["import { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ADD_POST_REQUEST,\n  REMOVE_IMAGE,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\nimport styles from \"../styles/Postform.module.scss\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport useInput from \"../hooks/useInput\";\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  //   const imageInput = useRef();\n  const [textAreaValue, setTextAreaValue] = useInput({});\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addPostDone) {\n      textAreaValue.text = \"\";\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const formData = new FormData();\n    imagePaths.forEach((i) => {\n      formData.append(\"image\", i);\n    });\n\n    formData.append(\"content\", textAreaValue.text);\n    if (textAreaValue.text !== \"\" || imagePaths.length !== 0) {\n      return dispatch(addPost(formData));\n    }\n    if (textAreaValue.text == \"\") {\n      alert(\"내용을 입력하세요.\");\n    }\n  };\n\n  const onChangeImage = useCallback((e) => {\n    const imageFormData = new FormData();\n\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({ type: UPLOAD_IMAGES_REQUEST, data: imageFormData });\n  });\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({ type: REMOVE_IMAGE, data: index });\n  });\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit}>\n      <div className={styles.textAreaWrap}>\n        <textarea\n          className={styles.textAreaStyle}\n          name=\"text\"\n          id=\"text\"\n          aria-label=\"minimum height\"\n          value={textAreaValue}\n          onChange={setTextAreaValue}\n          minRows={5}\n          placeholder=\"재미있는 일상을 사람들과 공유해보아요.\"\n          autoFocus\n        />\n        <div className={styles.buttonStyle}>\n          <div>\n            <input\n              type=\"file\"\n              ref={imageInput}\n              name=\"image\"\n              multiple\n              hidden\n              onChange={onChangeImage}\n            />\n            <Button\n              onClick={onClickImageUpload}\n              className={styles.insertImgBtn}\n            >\n              <ImageOutlinedIcon className={styles.insertImgIcon} />\n            </Button>\n          </div>\n          <Button type=\"submit\" className={styles.addPostBtn}>\n            게시\n          </Button>\n        </div>\n      </div>\n      {/* <Input accept=\"image/*\" multiple type=\"file\" /> */}\n\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}