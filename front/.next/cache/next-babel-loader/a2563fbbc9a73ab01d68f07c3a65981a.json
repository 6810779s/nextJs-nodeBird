{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import thunkMiddleware from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst loggerMidleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  next(action);\n  return;\n}; //action 실행전 콘솔로그를 찍어주는 미들웨어\n\n\nconst configureStore = () => {\n  // const store = createStore(rootReducer, composeWithDevTools());\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMidleware];\n  const enhancer = true ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}