{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/pages/user/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nReact;\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true\n  });\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id\n      });\n    }\n  }, [inView]);\n  console.log(\"userInfo\", userInfo);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), userInfo ? __jsx(Card, {\n    className: classes.cardLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"userProfile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, me.nickname[0]),\n    title: userInfo.nickname,\n    subheader: __jsx(Button, {\n      onClick: useCallback(() => {\n        dispatch(logoutRequestAction()); // setIsLoggedIn(false);\n      }, []),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, __jsx(LockOpenIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), logOutLoading ? __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }\n    }) : \"Logout\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), __jsx(CardContent, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    className: classes.typographyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), userInfo.Posts.length), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    className: classes.typographyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), userInfo.Followers.length), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    className: classes.typographyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), userInfo.Followings.length))) : \"\");\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/pages/user/[id].js"],"names":["React","useRouter","useInView","useDispatch","useSelector","AppLayout","LOAD_USER_POSTS_REQUEST","User","dispatch","userInfo","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","ref","inView","threshold","triggerOnce","unobserveOnEnter","delay","trackVisibility","router","id","query","useEffect","loadPostLoading","lastId","length","type","data","console","log","nickname","classes","cardLayout","me","useCallback","logoutRequestAction","logOutLoading","display","justifyContent","typographyBox","Posts","height","Followers","Followings"],"mappings":"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","sourcesContent":["React\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const { userInfo } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id,\n      });\n    }\n  }, [inView]);\n  console.log(\"userInfo\", userInfo);\n  return (\n    <AppLayout>\n      <Head>\n        <title>{userInfo.nickname}님의 글</title>\n        <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n        <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n        <meta\n          property=\"og:description\"\n          content={`${userInfo.nickname}님의 게시글`}\n        />\n        {/* <meta property=\"og:image\" content={singlePost.Images[0]?singlePost.Images[0].src:\"https://nodebird.com/favicon.icon\"}/>\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`}/> */}\n      </Head>\n      {userInfo ? (\n        <Card className={classes.cardLayout}>\n          <CardHeader\n            avatar={<Avatar aria-label=\"userProfile\">{me.nickname[0]}</Avatar>}\n            title={userInfo.nickname}\n            subheader={\n              <Button\n                onClick={useCallback(() => {\n                  dispatch(logoutRequestAction());\n                  // setIsLoggedIn(false);\n                }, [])}\n              >\n                <LockOpenIcon />\n                {logOutLoading ? <Loading /> : \"Logout\"}\n              </Button>\n            }\n          />\n          <CardContent\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography className={classes.typographyBox}>\n              짹짹\n              <br />\n              {userInfo.Posts.length}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로워\n              <br />\n              {userInfo.Followers.length}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로잉\n              <br />\n              {userInfo.Followings.length}\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        \"\"\n      )}\n    </AppLayout>\n  );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}