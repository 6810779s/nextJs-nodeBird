{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch(); //   const imageInput = useRef();\n\n  const {\n    0: textAreaValue,\n    1: setTextAreaValue\n  } = useState(\"\");\n  const onChangeText = useCallback(e => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", i);\n\n    if (data.get(\"dailyText\") !== \"\") {\n      dispatch({\n        type: ADD_POST_REQUEST,\n        data\n      });\n    }\n  };\n\n  const onChangeImage = useCallback(e => {\n    console.log(\"images:\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(TextareaAutosize, {\n    name: \"dailyText\",\n    id: \"dailyText\",\n    \"aria-label\": \"minimum height\",\n    value: textAreaValue,\n    onChange: onChangeText,\n    minRows: 5,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    autoFocus: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    ref: imageInput,\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    onChange: onChangeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\")), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/components/PostForm.js"],"names":["Box","Button","Input","TextareaAutosize","React","useCallback","useState","useEffect","useRef","useDispatch","useSelector","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","addPost","PostForm","dispatch","textAreaValue","setTextAreaValue","onChangeText","e","target","value","imagePaths","addPostDone","state","post","imageInput","handleSubmit","preventDefault","data","FormData","currentTarget","formData","forEach","p","append","i","get","type","onChangeImage","console","log","files","imageFormData","call","f","onClickImageUpload","current","click","onRemoveImage","index","width","marginTop","map","v","display"],"mappings":"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","sourcesContent":["import { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ADD_POST_REQUEST,\n  REMOVE_IMAGE,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  //   const imageInput = useRef();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const onChangeText = useCallback((e) => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", i);\n    if (data.get(\"dailyText\") !== \"\") {\n      dispatch({ type: ADD_POST_REQUEST, data });\n    }\n  };\n\n  const onChangeImage = useCallback((e) => {\n    console.log(\"images:\", e.target.files);\n    const imageFormData = new FormData();\n\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({ type: UPLOAD_IMAGES_REQUEST, data: imageFormData });\n  });\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({ type: REMOVE_IMAGE, data: index });\n  });\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit}>\n      <TextareaAutosize\n        name=\"dailyText\"\n        id=\"dailyText\"\n        aria-label=\"minimum height\"\n        value={textAreaValue}\n        onChange={onChangeText}\n        minRows={5}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n        autoFocus\n        style={{ width: \"100%\" }}\n      />\n      {/* <Input accept=\"image/*\" multiple type=\"file\" /> */}\n      <div>\n        <input\n          type=\"file\"\n          ref={imageInput}\n          name=\"image\"\n          multiple\n          hidden\n          onChange={onChangeImage}\n        />\n        <Button onClick={onClickImageUpload} variant=\"contained\">\n          이미지 업로드\n        </Button>\n      </div>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        style={{ marginTop: \"10px\" }}\n      >\n        짹짹\n      </Button>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}