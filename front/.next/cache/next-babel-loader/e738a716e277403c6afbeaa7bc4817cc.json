{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addComments),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(likeButton),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(warchRemovePost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComments),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(warchLoadPost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikeButton),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_ME, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE } from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"api/post\", data);\n}\n\nfunction removePost(action) {\n  return _regeneratorRuntime.wrap(function removePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context2.next = 7;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"err:\", _context2.t0);\n          _context2.next = 14;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: REMOVE_POST_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComments(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComments$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(addCommentsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: ADD_COMMENTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: ADD_COMMENTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_POST_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction likeButtonAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction likeButton(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likeButton$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(likeButtonAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction warchRemovePost() {\n  return _regeneratorRuntime.wrap(function warchRemovePost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchAddComments() {\n  return _regeneratorRuntime.wrap(function watchAddComments$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(ADD_COMMENTS_REQUEST, addComments);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction warchLoadPost() {\n  return _regeneratorRuntime.wrap(function warchLoadPost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchLikeButton() {\n  return _regeneratorRuntime.wrap(function watchLikeButton$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComments), fork(warchRemovePost), fork(warchLoadPost), fork(watchLikeButton)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/post.js"],"names":["addPost","removePost","addComments","loadPost","likeButton","watchAddPost","warchRemovePost","watchAddComments","warchLoadPost","watchLikeButton","postSaga","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","all","fork","put","takeLatest","delay","call","axios","addPostAPI","data","post","content","action","result","type","id","error","response","removePostAPI","console","addCommentsAPI","postId","loadPostAPI","get","likeButtonAPI"],"mappings":"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","sourcesContent":["import {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  ADD_POST_TO_ME,\n  REMOVE_POST_OF_ME,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n} from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", { content: data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`api/post`, data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeButtonAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* likeButton(action) {\n  try {\n    const result = yield call(likeButtonAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* warchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikeButton() {\n  yield takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComments),\n    fork(warchRemovePost),\n    fork(warchLoadPost),\n    fork(watchLikeButton),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}