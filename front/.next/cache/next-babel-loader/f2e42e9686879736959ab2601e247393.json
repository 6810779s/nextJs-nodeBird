{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch(); //   const imageInput = useRef();\n\n  var _useState = useState(\"\"),\n      textAreaValue = _useState[0],\n      setTextAreaValue = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setTextAreaValue(e.target.value);\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var data = new FormData(e.currentTarget);\n\n    if (data.get(\"dailyText\") !== \"\") {\n      dispatch(addPost(data.get(\"dailyText\")));\n    }\n  }; //   const onClickImageUpload = useCallback(() => {\n  //     imageInput.current.click();\n  //   }, [imageInput.current]);\n\n\n  return __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(TextareaAutosize, {\n    name: \"dailyText\",\n    id: \"dailyText\",\n    \"aria-label\": \"minimum height\",\n    value: textAreaValue,\n    onChange: onChangeText,\n    minRows: 5,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    autoFocus: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    type: \"file\",\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\")), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"wo7UmTCKSyV57OPGaCQ9k1yyj60=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/components/PostForm.js"],"names":["Box","Button","Input","TextareaAutosize","React","useCallback","useState","useEffect","useDispatch","useSelector","addPost","PostForm","dispatch","textAreaValue","setTextAreaValue","onChangeText","e","target","value","state","post","imagePaths","addPostDone","handleSubmit","preventDefault","data","FormData","currentTarget","get","width","imageInput","onClickImageUpload","marginTop","map","v","display"],"mappings":"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","sourcesContent":["import { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  //   const imageInput = useRef();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const onChangeText = useCallback((e) => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    if (data.get(\"dailyText\") !== \"\") {\n      dispatch(addPost(data.get(\"dailyText\")));\n    }\n  };\n\n  //   const onClickImageUpload = useCallback(() => {\n  //     imageInput.current.click();\n  //   }, [imageInput.current]);\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit}>\n      <TextareaAutosize\n        name=\"dailyText\"\n        id=\"dailyText\"\n        aria-label=\"minimum height\"\n        value={textAreaValue}\n        onChange={onChangeText}\n        minRows={5}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n        autoFocus\n        style={{ width: \"100%\" }}\n      />\n      {/* <Input accept=\"image/*\" multiple type=\"file\" /> */}\n      <div>\n        <Input type=\"file\" hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload} variant=\"contained\">\n          이미지 업로드\n        </Button>\n      </div>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        style={{ marginTop: \"10px\" }}\n      >\n        짹짹\n      </Button>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}