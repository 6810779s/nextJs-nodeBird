{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useCallback } from \"react\";\nimport React from \"react\";\n\nconst useInput = (initialValue = null) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(initialValue);\n  const handler = useCallback(e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      [name]: value\n    }));\n  }, [data]);\n  const reset = useCallback(() => {\n    setData(initialValue);\n  }, [initialValue]);\n  return [data, handler, reset];\n};\n\nexport default useInput;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/hooks/useInput.js"],"names":["useState","useCallback","React","useInput","initialValue","data","setData","handler","e","value","name","target","reset"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,YAAY,GAAG,IAAhB,KAAyB;AACxC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAACI,YAAD,CAAhC;AACA,QAAMG,OAAO,GAAGN,WAAW,CACxBO,CAAD,IAAO;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAL,IAAAA,OAAO,iCACFD,IADE;AAEL,OAACK,IAAD,GAAQD;AAFH,OAAP;AAID,GAPwB,EAQzB,CAACJ,IAAD,CARyB,CAA3B;AAUA,QAAMO,KAAK,GAAGX,WAAW,CAAC,MAAM;AAC9BK,IAAAA,OAAO,CAACF,YAAD,CAAP;AACD,GAFwB,EAEtB,CAACA,YAAD,CAFsB,CAAzB;AAGA,SAAO,CAACC,IAAD,EAAOE,OAAP,EAAgBK,KAAhB,CAAP;AACD,CAhBD;;AAkBA,eAAeT,QAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport React from \"react\";\n\nconst useInput = (initialValue = null) => {\n  const [data, setData] = useState(initialValue);\n  const handler = useCallback(\n    (e) => {\n      const { value, name } = e.target;\n      setData({\n        ...data,\n        [name]: value,\n      });\n    },\n    [data]\n  );\n  const reset = useCallback(() => {\n    setData(initialValue);\n  }, [initialValue]);\n  return [data, handler, reset];\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}