{"ast":null,"code":"var __jsx = React.createElement;\nimport { Avatar, Button, Card, CardContent, CardHeader, Divider, Typography } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport React, { useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequestAction } from \"../reducers/user\";\nimport Loading from \"./Loading\";\nimport Link from \"next/link\";\nconst useStyles = makeStyles({\n  profileWrap: {\n    maxWidth: \"500px\",\n    margin: \"auto\",\n    padding: \"30px\"\n  },\n  typographyBox: {\n    width: \"55px\",\n    background: \"#E6E6E6\",\n    textAlign: \"center\"\n  },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\"\n  }\n});\n\nconst UserProfile = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const {\n    me,\n    logOutLoading\n  } = useSelector(state => state.user);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    className: classes.cardLayout\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Link, {\n      href: `/user/${me.id}`\n    }, __jsx(\"a\", null, __jsx(Avatar, {\n      \"aria-label\": \"userProfile\"\n    }, me.nickname[0]))),\n    title: me.nickname,\n    subheader: __jsx(Button, {\n      onClick: useCallback(() => {\n        dispatch(logoutRequestAction()); // setIsLoggedIn(false);\n      }, [])\n    }, __jsx(LockOpenIcon, null), logOutLoading ? __jsx(Loading, null) : \"Logout\")\n  }), __jsx(CardContent, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }\n  }, __jsx(Typography, {\n    className: classes.typographyBox\n  }, __jsx(Link, {\n    href: `/user/${me.id}`\n  }, __jsx(\"a\", null, \" \", \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), me.Posts.length, \" \"))), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\"\n  }), __jsx(Typography, {\n    className: classes.typographyBox\n  }, __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"a\", null, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), me.Followers.length))), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\"\n  }), __jsx(Typography, {\n    className: classes.typographyBox\n  }, __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"a\", null, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), me.Followings.length))))));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/nextJs-nodeBird/front/components/UserProfile.js"],"names":["Avatar","Button","Card","CardContent","CardHeader","Divider","Typography","LockOpenIcon","React","useCallback","makeStyles","useDispatch","useSelector","logoutRequestAction","Loading","Link","useStyles","profileWrap","maxWidth","margin","padding","typographyBox","width","background","textAlign","cardLayout","UserProfile","dispatch","classes","me","logOutLoading","state","user","id","nickname","display","justifyContent","Posts","length","height","Followers","Followings"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n} from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport React, { useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequestAction } from \"../reducers/user\";\nimport Loading from \"./Loading\";\nimport Link from \"next/link\";\nconst useStyles = makeStyles({\n  profileWrap: { maxWidth: \"500px\", margin: \"auto\", padding: \"30px\" },\n  typographyBox: { width: \"55px\", background: \"#E6E6E6\", textAlign: \"center\" },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\",\n  },\n});\n\nconst UserProfile = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { me, logOutLoading } = useSelector((state) => state.user);\n  return (\n    <>\n      <Card className={classes.cardLayout}>\n        <CardHeader\n          avatar={\n            <Link href={`/user/${me.id}`}>\n              <a>\n                <Avatar aria-label=\"userProfile\">{me.nickname[0]}</Avatar>\n              </a>\n            </Link>\n          }\n          title={me.nickname}\n          subheader={\n            <Button\n              onClick={useCallback(() => {\n                dispatch(logoutRequestAction());\n                // setIsLoggedIn(false);\n              }, [])}\n            >\n              <LockOpenIcon />\n              {logOutLoading ? <Loading /> : \"Logout\"}\n            </Button>\n          }\n        />\n        <CardContent\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <Typography className={classes.typographyBox}>\n            <Link href={`/user/${me.id}`}>\n              <a>\n                {\" \"}\n                짹짹\n                <br />\n                {me.Posts.length}{\" \"}\n              </a>\n            </Link>\n          </Typography>\n\n          <Divider style={{ height: 50 }} orientation=\"vertical\" />\n          <Typography className={classes.typographyBox}>\n            <Link href=\"/profile\">\n              <a>\n                팔로워\n                <br />\n                {me.Followers.length}\n              </a>\n            </Link>\n          </Typography>\n          <Divider style={{ height: 50 }} orientation=\"vertical\" />\n          <Typography className={classes.typographyBox}>\n            <Link href=\"/profile\">\n              <a>\n                팔로잉\n                <br />\n                {me.Followings.length}\n              </a>\n            </Link>\n          </Typography>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}