{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/pages/user/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { Avatar, Divider, Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nconst useStyles = makeStyles({\n  profileWrap: {\n    maxWidth: \"500px\",\n    margin: \"auto\",\n    padding: \"30px\"\n  },\n  typographyBox: {\n    width: \"55px\",\n    background: \"#E6E6E6\",\n    textAlign: \"center\"\n  },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\"\n  }\n});\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true\n  });\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id\n      });\n    }\n  }, [inView]);\n  console.log(\"userInfo\", userInfo);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), userInfo ? __jsx(Card, {\n    className: classes.cardLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"userProfile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(CardContent, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    className: classes.typographyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), userInfo.Posts), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    className: classes.typographyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), userInfo.Followers), __jsx(Divider, {\n    style: {\n      height: 50\n    },\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    className: classes.typographyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), userInfo.Followings))) : \"\");\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/pages/user/[id].js"],"names":["React","useEffect","useCallback","useRouter","useInView","useDispatch","useSelector","AppLayout","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","wrapper","axios","END","Head","Avatar","Divider","Card","CardContent","CardHeader","Typography","makeStyles","LockOpenIcon","useStyles","profileWrap","maxWidth","margin","padding","typographyBox","width","background","textAlign","cardLayout","User","dispatch","classes","userInfo","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","ref","inView","threshold","triggerOnce","unobserveOnEnter","delay","trackVisibility","router","id","query","loadPostLoading","lastId","length","type","data","console","log","nickname","display","justifyContent","Posts","height","Followers","Followings","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport {\n  Avatar,\n  Divider,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\n\nconst useStyles = makeStyles({\n  profileWrap: { maxWidth: \"500px\", margin: \"auto\", padding: \"30px\" },\n  typographyBox: { width: \"55px\", background: \"#E6E6E6\", textAlign: \"center\" },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\",\n  },\n});\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { userInfo } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id,\n      });\n    }\n  }, [inView]);\n  console.log(\"userInfo\", userInfo);\n  return (\n    <AppLayout>\n      <Head>\n        <title>{userInfo.nickname}님의 글</title>\n        <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n        <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n        <meta\n          property=\"og:description\"\n          content={`${userInfo.nickname}님의 게시글`}\n        />\n        {/* <meta property=\"og:image\" content={singlePost.Images[0]?singlePost.Images[0].src:\"https://nodebird.com/favicon.icon\"}/>\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`}/> */}\n      </Head>\n      {userInfo ? (\n        <Card className={classes.cardLayout}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"userProfile\">{userInfo.nickname[0]}</Avatar>\n            }\n            title={userInfo.nickname}\n          />\n          <CardContent\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography className={classes.typographyBox}>\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        \"\"\n      )}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: context.params.id,\n    });\n\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}