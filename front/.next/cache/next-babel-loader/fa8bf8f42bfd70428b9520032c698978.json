{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport { Avatar, Button, ButtonGroup, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, List, ListItem, ListItemAvatar, ListItemText, Popover, Typography } from \"@material-ui/core\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST, LIKE_BUTTON_REQUEST, UNLIKE_BUTTON_REQUEST, RETWEET_REQUEST } from \"../constants/post\";\nimport Loading from \"./Loading\";\nimport FollowButton from \"./FollowButton\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    removePostLoading,\n    retweetFailure\n  } = useSelector(state => state.post);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = me === null || me === void 0 ? void 0 : me.id; // 이문법과 같음 me && me.id\n\n  const UIid = open ? \"simple-popover\" : undefined;\n  const {\n    0: comment,\n    1: setComment\n  } = useState(false);\n  const dispatch = useDispatch();\n  console.log(\"me:\", me);\n  console.log(\"me:\", me); // useEffect(() => {\n  //   if (retweetFailure) {\n  //     alert(retweetFailure);\n  //   }\n  // }, [retweetFailure]);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onToggleComment = () => {\n    setComment(prev => !prev);\n  };\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      console.log(\"0\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      console.log(\"1\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: UNLIKE_BUTTON_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onLike = useCallback(() => {\n    if (!id) {\n      console.log(\"2\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: LIKE_BUTTON_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const liked = post.Likers.find(v => v.id === id);\n  const OnRetweet = useCallback(() => {\n    if (!id) {\n      console.log(\"3\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"userImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    action: __jsx(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-describedby\": UIid,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(MoreHorizIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })),\n    subheader: me && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), __jsx(CardMedia, {\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, post.Images[0] && __jsx(PostImages, {\n    images: post.Images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 30\n    }\n  })), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(PostCardContent, {\n    postData: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), __jsx(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"retweet\",\n    onClick: OnRetweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(RepeatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), __jsx(IconButton, {\n    \"aria-label\": \"add to favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, liked ? __jsx(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    onClick: onUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }) : __jsx(FavoriteBorderIcon, {\n    onClick: onLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })), __jsx(IconButton, {\n    \"aria-label\": \"comment\",\n    onClick: onToggleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, __jsx(TextsmsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }))), __jsx(Popover, {\n    id: UIid,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"\\uC218\\uC815\"), __jsx(Button, {\n    onClick: onRemovePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, removePostLoading ? __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 40\n    }\n  }) : \"삭제\")) : __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"\\uC2E0\\uACE0\")))), comment && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    subheader: __jsx(ListSubheader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, post.Comments.map(data => __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, data.User.nickname[0])), __jsx(ListItemText, {\n    primary: data.User.nickname,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, data.content)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/components/PostCard.js"],"names":["Avatar","Button","ButtonGroup","Card","CardActions","CardContent","CardHeader","CardMedia","IconButton","List","ListItem","ListItemAvatar","ListItemText","Popover","Typography","React","useState","useCallback","useEffect","PropTypes","RepeatIcon","FavoriteIcon","FavoriteBorderIcon","TextsmsIcon","MoreHorizIcon","useDispatch","useSelector","PostImages","ListSubheader","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_BUTTON_REQUEST","UNLIKE_BUTTON_REQUEST","RETWEET_REQUEST","Loading","FollowButton","PostCard","post","me","state","user","removePostLoading","retweetFailure","anchorEl","setAnchorEl","open","Boolean","id","UIid","undefined","comment","setComment","dispatch","console","log","handleClick","event","currentTarget","handleClose","onToggleComment","prev","onRemovePost","alert","type","data","onUnlike","onLike","liked","Likers","find","v","OnRetweet","marginBottom","User","nickname","margin","Images","content","color","vertical","horizontal","Comments","length","map","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Button,\n  ButtonGroup,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport {\n  REMOVE_POST_REQUEST,\n  LIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_REQUEST,\n  RETWEET_REQUEST,\n} from \"../constants/post\";\nimport Loading from \"./Loading\";\nimport FollowButton from \"./FollowButton\";\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const { removePostLoading, retweetFailure } = useSelector(\n    (state) => state.post\n  );\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = me?.id; // 이문법과 같음 me && me.id\n  const UIid = open ? \"simple-popover\" : undefined;\n  const [comment, setComment] = useState(false);\n  const dispatch = useDispatch();\n  console.log(\"me:\", me);\n  console.log(\"me:\", me);\n  // useEffect(() => {\n  //   if (retweetFailure) {\n  //     alert(retweetFailure);\n  //   }\n  // }, [retweetFailure]);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onToggleComment = () => {\n    setComment((prev) => !prev);\n  };\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      console.log(\"0\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: REMOVE_POST_REQUEST, data: post.id });\n  }, []);\n\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      console.log(\"1\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: UNLIKE_BUTTON_REQUEST, data: post.id });\n  }, []);\n  const onLike = useCallback(() => {\n    if (!id) {\n      console.log(\"2\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: LIKE_BUTTON_REQUEST, data: post.id });\n  }, []);\n\n  const liked = post.Likers.find((v) => v.id === id);\n  const OnRetweet = useCallback(() => {\n    if (!id) {\n      console.log(\"3\");\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({ type: RETWEET_REQUEST, data: post.id });\n  }, []);\n  return (\n    <div style={{ marginBottom: 30 }}>\n      <Card>\n        <CardHeader\n          avatar={<Avatar aria-label=\"userImg\">{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          action={\n            <IconButton\n              aria-label=\"more\"\n              aria-describedby={UIid}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              <MoreHorizIcon />\n            </IconButton>\n          }\n          subheader={me && <FollowButton post={post} />}\n        />\n        <CardMedia style={{ margin: \"auto\" }}>\n          {post.Images[0] && <PostImages images={post.Images} />}\n        </CardMedia>\n        <CardContent>\n          <PostCardContent postData={post.content} />\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"retweet\" onClick={OnRetweet}>\n            <RepeatIcon />\n          </IconButton>\n          <IconButton aria-label=\"add to favorite\">\n            {liked ? (\n              <FavoriteIcon style={{ color: \"red\" }} onClick={onUnlike} />\n            ) : (\n              <FavoriteBorderIcon onClick={onLike} />\n            )}\n          </IconButton>\n          <IconButton aria-label=\"comment\" onClick={onToggleComment}>\n            <TextsmsIcon />\n          </IconButton>\n        </CardActions>\n        <Popover\n          id={UIid}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <ButtonGroup>\n            {id && post.User.id === id ? (\n              <>\n                <Button>수정</Button>\n                <Button onClick={onRemovePost}>\n                  {removePostLoading ? <Loading /> : \"삭제\"}\n                </Button>\n              </>\n            ) : (\n              <Button>신고</Button>\n            )}\n          </ButtonGroup>\n        </Popover>\n        {/* <Image />\n        <Content />\n        <Button></Button> */}\n      </Card>\n      {comment && (\n        <div>\n          <CommentForm post={post} />\n\n          <List\n            subheader={\n              <ListSubheader>{post.Comments.length}개의 댓글</ListSubheader>\n            }\n          >\n            {post.Comments.map((data) => (\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>{data.User.nickname[0]}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={data.User.nickname}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                      >\n                        {data.content}\n                      </Typography>\n                      {/* {\" — I'll be in your neighborhood doing errands this…\"} */}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}