{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UPLOAD_IMAGES_REQUEST } from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch(); //   const imageInput = useRef();\n\n  var _useState = useState(\"\"),\n      textAreaValue = _useState[0],\n      setTextAreaValue = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setTextAreaValue(e.target.value);\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n  var imageInput = useRef();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var data = new FormData(e.currentTarget);\n\n    if (data.get(\"dailyText\") !== \"\") {\n      dispatch(addPost(data.get(\"dailyText\")));\n    }\n  };\n\n  var onChangeImage = useCallback(function (e) {\n    console.log(\"images:\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(TextareaAutosize, {\n    name: \"dailyText\",\n    id: \"dailyText\",\n    \"aria-label\": \"minimum height\",\n    value: textAreaValue,\n    onChange: onChangeText,\n    minRows: 5,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    autoFocus: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    ref: imageInput,\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    onChange: onChangeImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\")), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"ywYCDKAZwg9t8hPccjGFY7+E2zs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/components/PostForm.js"],"names":["Box","Button","Input","TextareaAutosize","React","useCallback","useState","useEffect","useRef","useDispatch","useSelector","UPLOAD_IMAGES_REQUEST","addPost","PostForm","dispatch","textAreaValue","setTextAreaValue","onChangeText","e","target","value","state","post","imagePaths","addPostDone","imageInput","handleSubmit","preventDefault","data","FormData","currentTarget","get","onChangeImage","console","log","files","imageFormData","forEach","call","f","append","type","onClickImageUpload","current","click","width","marginTop","map","v","display"],"mappings":"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","sourcesContent":["import { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UPLOAD_IMAGES_REQUEST } from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  //   const imageInput = useRef();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const onChangeText = useCallback((e) => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    if (data.get(\"dailyText\") !== \"\") {\n      dispatch(addPost(data.get(\"dailyText\")));\n    }\n  };\n\n  const onChangeImage = useCallback((e) => {\n    console.log(\"images:\", e.target.files);\n    const imageFormData = new FormData();\n\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({ type: UPLOAD_IMAGES_REQUEST, data: imageFormData });\n  });\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit}>\n      <TextareaAutosize\n        name=\"dailyText\"\n        id=\"dailyText\"\n        aria-label=\"minimum height\"\n        value={textAreaValue}\n        onChange={onChangeText}\n        minRows={5}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n        autoFocus\n        style={{ width: \"100%\" }}\n      />\n      {/* <Input accept=\"image/*\" multiple type=\"file\" /> */}\n      <div>\n        <input\n          type=\"file\"\n          ref={imageInput}\n          name=\"image\"\n          multiple\n          hidden\n          onChange={onChangeImage}\n        />\n        <Button onClick={onClickImageUpload} variant=\"contained\">\n          이미지 업로드\n        </Button>\n      </div>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        style={{ marginTop: \"10px\" }}\n      >\n        짹짹\n      </Button>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\n            <div>\n              {}\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}