{"ast":null,"code":"// import shortId from \"shortid\";\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE, UNLIKE_BUTTON_REQUEST, UNLIKE_BUTTON_SUCCESS, UNLIKE_BUTTON_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, REMOVE_IMAGE } from \"../constants/post\";\nimport produce from \"immer\"; // import faker from \"faker\";\n\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsFailure: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostFailure: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostFailure: null,\n  addCommentsLoading: false,\n  addCommentsDone: false,\n  addCommentsFailure: null,\n  likeButtonLoading: false,\n  likeButtonDone: false,\n  likeButtonFailure: null,\n  unlikeButtonLoading: false,\n  unlikeButtonDone: false,\n  unlikeButtonFailure: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesFailure: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetFailure: null\n}; // export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComments = function addComments(data) {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data: data\n  };\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n\n      case LIKE_BUTTON_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likeButtonLoading = false;\n          draft.likeButtonDone = true;\n          break;\n        }\n\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n\n      case UNLIKE_BUTTON_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikeButtonLoading = false;\n          draft.unlikeButtonDone = true;\n          break;\n        }\n\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n\n      case ADD_COMMENTS_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/reducers/post.js"],"names":["LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostLoading","loadPostDone","loadPostFailure","loadPostsLoading","loadPostsDone","loadPostsFailure","addPostLoading","addPostDone","addPostFailure","removePostLoading","removePostDone","removePostFailure","addCommentsLoading","addCommentsDone","addCommentsFailure","likeButtonLoading","likeButtonDone","likeButtonFailure","unlikeButtonLoading","unlikeButtonDone","unlikeButtonFailure","uploadImagesLoading","uploadImagesDone","uploadImagesFailure","retweetLoading","retweetDone","retweetFailure","addPost","data","type","addComments","rootReducer","state","action","draft","filter","v","i","unshift","error","post","find","id","PostId","Likers","push","UserId","length","concat","Comments","removePostLoadin"],"mappings":"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","sourcesContent":["// import shortId from \"shortid\";\nimport {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  REMOVE_IMAGE,\n} from \"../constants/post\";\nimport produce from \"immer\";\n// import faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsFailure: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostFailure: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostFailure: null,\n  addCommentsLoading: false,\n  addCommentsDone: false,\n  addCommentsFailure: null,\n  likeButtonLoading: false,\n  likeButtonDone: false,\n  likeButtonFailure: null,\n  unlikeButtonLoading: false,\n  unlikeButtonDone: false,\n  unlikeButtonFailure: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesFailure: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetFailure: null,\n};\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport const addPost = (data) => {\n  return {\n    type: ADD_POST_REQUEST,\n    data,\n  };\n};\n\nexport const addComments = (data) => {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data,\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n      case LIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likeButtonLoading = false;\n        draft.likeButtonDone = true;\n        break;\n      }\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n      case UNLIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonDone = true;\n        break;\n      }\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n      case ADD_COMMENTS_SUCCESS:\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}