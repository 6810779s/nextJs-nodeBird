{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Avatar, Button, ButtonGroup, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, List, ListItem, ListItemAvatar, ListItemText, Popover, Typography } from \"@material-ui/core\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST, LIKE_BUTTON_REQUEST, UNLIKE_BUTTON_REQUEST } from \"../constants/post\";\nimport Loading from \"./Loading\";\nimport FollowButton from \"./FollowButton\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector2.removePostLoading;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n  var id = me === null || me === void 0 ? void 0 : me.id; // 이문법과 같음 me && me.id\n\n  var UIid = open ? \"simple-popover\" : undefined;\n\n  var _useState = useState(false),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var onToggleComment = function onToggleComment() {\n    setComment(function (prev) {\n      return !prev;\n    });\n  };\n\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    dispatch({\n      type: UNLIKE_BUTTON_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onLike = useCallback(function () {\n    console.log(\"like Click!!!!!!\");\n    dispatch({\n      type: LIKE_BUTTON_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  var OnRetweet = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"userImg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    action: __jsx(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-describedby\": UIid,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, __jsx(MoreHorizIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })),\n    subheader: me && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 28\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), __jsx(CardMedia, {\n    style: {\n      margin: \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, post.Images[0] && __jsx(PostImages, {\n    images: post.Images,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 30\n    }\n  })), __jsx(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(PostCardContent, {\n    postData: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), __jsx(CardActions, {\n    disableSpacing: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"retweet\",\n    onClick: OnRetweet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(RepeatIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), __jsx(IconButton, {\n    \"aria-label\": \"add to favorite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, liked ? __jsx(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    onClick: onUnlike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }) : __jsx(FavoriteBorderIcon, {\n    onClick: onLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  })), __jsx(IconButton, {\n    \"aria-label\": \"comment\",\n    onClick: onToggleComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(TextsmsIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }))), __jsx(Popover, {\n    id: UIid,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"\\uC218\\uC815\"), __jsx(Button, {\n    onClick: onRemovePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, removePostLoading ? __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 40\n    }\n  }) : \"삭제\")) : __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"\\uC2E0\\uACE0\")))), comment && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    subheader: __jsx(ListSubheader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, post.Comments.map(function (data) {\n    return __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, data.User.nickname[0])), __jsx(ListItemText, {\n      primary: data.User.nickname,\n      secondary: __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        color: \"textPrimary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 23\n        }\n      }, data.content)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }));\n  }))));\n};\n\n_s(PostCard, \"9y48e9Od2okjaYbFscs6V77u7uc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/components/PostCard.js"],"names":["Avatar","Button","ButtonGroup","Card","CardActions","CardContent","CardHeader","CardMedia","IconButton","List","ListItem","ListItemAvatar","ListItemText","Popover","Typography","React","useState","useCallback","PropTypes","RepeatIcon","FavoriteIcon","FavoriteBorderIcon","TextsmsIcon","MoreHorizIcon","useDispatch","useSelector","PostImages","ListSubheader","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_BUTTON_REQUEST","UNLIKE_BUTTON_REQUEST","Loading","FollowButton","PostCard","post","state","user","me","removePostLoading","anchorEl","setAnchorEl","open","Boolean","id","UIid","undefined","comment","setComment","dispatch","handleClick","event","currentTarget","handleClose","onToggleComment","prev","onRemovePost","alert","type","data","onUnlike","onLike","console","log","liked","Likers","find","v","OnRetweet","marginBottom","User","nickname","margin","Images","content","color","vertical","horizontal","Comments","length","map","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Button,\n  ButtonGroup,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport {\n  REMOVE_POST_REQUEST,\n  LIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_REQUEST,\n} from \"../constants/post\";\nimport Loading from \"./Loading\";\nimport FollowButton from \"./FollowButton\";\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = me?.id; // 이문법과 같음 me && me.id\n  const UIid = open ? \"simple-popover\" : undefined;\n  const [comment, setComment] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onToggleComment = () => {\n\n    setComment((prev) => !prev);\n  };\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    dispatch({ type: REMOVE_POST_REQUEST, data: post.id });\n  }, []);\n\n  const onUnlike = useCallback(() => {\n   if (!id) {\n     return alert(\"로그인이 필요합니다.\");\n   }\n    dispatch({ type: UNLIKE_BUTTON_REQUEST, data: post.id });\n  }, []);\n  const onLike = useCallback(() => {\n    console.log(\"like Click!!!!!!\");\n    dispatch({ type: LIKE_BUTTON_REQUEST, data: post.id });\n  }, []);\n\n  const liked = post.Likers.find((v) => v.id === id);\n  const OnRetweet = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n  }, []);\n  return (\n    <div style={{ marginBottom: 30 }}>\n      <Card>\n        <CardHeader\n          avatar={<Avatar aria-label=\"userImg\">{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          action={\n            <IconButton\n              aria-label=\"more\"\n              aria-describedby={UIid}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              <MoreHorizIcon />\n            </IconButton>\n          }\n          subheader={me && <FollowButton post={post} />}\n        />\n        <CardMedia style={{ margin: \"auto\" }}>\n          {post.Images[0] && <PostImages images={post.Images} />}\n        </CardMedia>\n        <CardContent>\n          <PostCardContent postData={post.content} />\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"retweet\" onClick={OnRetweet}>\n            <RepeatIcon />\n          </IconButton>\n          <IconButton aria-label=\"add to favorite\">\n            {liked ? (\n              <FavoriteIcon style={{ color: \"red\" }} onClick={onUnlike} />\n            ) : (\n              <FavoriteBorderIcon onClick={onLike} />\n            )}\n          </IconButton>\n          <IconButton aria-label=\"comment\" onClick={onToggleComment}>\n            <TextsmsIcon />\n          </IconButton>\n        </CardActions>\n        <Popover\n          id={UIid}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <ButtonGroup>\n            {id && post.User.id === id ? (\n              <>\n                <Button>수정</Button>\n                <Button onClick={onRemovePost}>\n                  {removePostLoading ? <Loading /> : \"삭제\"}\n                </Button>\n              </>\n            ) : (\n              <Button>신고</Button>\n            )}\n          </ButtonGroup>\n        </Popover>\n        {/* <Image />\n        <Content />\n        <Button></Button> */}\n      </Card>\n      {comment && (\n        <div>\n          <CommentForm post={post} />\n\n          <List\n            subheader={\n              <ListSubheader>{post.Comments.length}개의 댓글</ListSubheader>\n            }\n          >\n            {post.Comments.map((data) => (\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>{data.User.nickname[0]}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={data.User.nickname}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                      >\n                        {data.content}\n                      </Typography>\n                      {/* {\" — I'll be in your neighborhood doing errands this…\"} */}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}