{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowers),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowings),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(following),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(unfollowing),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(changeNickname),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollowing),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollowing),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchChangeNickname),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE } from \"../constants/user\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\"; //takeEvery : 두번 눌렀을때 , 두개가 올라가게됨\n//takeLatest: 두번 연속 눌렀을때도 마지막 액션만 올라감.\n//takeLeading: 맨처음 하나만 올라감.\n//throttle: 설정한 시간동안 누른 동작이 여러개면, 하나만 액션동작\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\"); //baseURL = \"http://localhost:3065\";\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data); //baseURL = \"http://localhost:3065\";\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction loadFollowingsPI(data) {\n  return axios.get(\"/user/followings\", data); //baseURL = \"http://localhost:3065\";\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadFollowingsPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data); //baseURL = \"http://localhost:3065\";\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOG_IN_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(\"err:\", _context5.t0);\n          _context5.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n} //proxy, cors를 피해가는 방법중 하나. 브라우저=>프론트=>백엔드=>프론트=>브라우저\n\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context6.next = 12;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n}\n\nfunction followingAPI(data) {\n  return axios.patch(\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction following(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function following$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(followingAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          console.log(\"result\", result);\n          _context7.next = 7;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context7.next = 13;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 13;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n}\n\nfunction unfollowingAPI(data) {\n  return axios[\"delete\"](\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction unfollowing(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollowing$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(unfollowingAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 12;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 12;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction changeNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function changeNickname$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(changeNicknameAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          console.log(\"result\", result);\n          _context9.next = 7;\n          return put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context9.next = 14;\n          break;\n\n        case 9:\n          _context9.prev = 9;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 14;\n          return put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 9]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchFollowing() {\n  return _regeneratorRuntime.wrap(function watchFollowing$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(FOLLOW_REQUEST, following);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchUnfollowing() {\n  return _regeneratorRuntime.wrap(function watchUnfollowing$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollowing);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchChangeNickname() {\n  return _regeneratorRuntime.wrap(function watchChangeNickname$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollowing), fork(watchUnfollowing), fork(watchLoadMyInfo), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname)]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/user.js"],"names":["loadMyInfo","loadFollowers","loadFollowings","logIn","logOut","signUp","following","unfollowing","changeNickname","watchLogIn","watchLogOut","watchSignUp","watchFollowing","watchUnfollowing","watchLoadMyInfo","watchChangeNickname","watchLoadFollowers","watchLoadFollowings","userSaga","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","all","fork","put","takeLatest","delay","call","axios","loadMyInfoAPI","get","action","data","result","type","error","response","loadFollowersAPI","loadFollowingsPI","logInAPI","post","logOutAPI","console","signUpAPI","err","followingAPI","patch","log","unfollowingAPI","changeNicknameAPI","nickname"],"mappings":"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","sourcesContent":["import {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWERS_SUCCESS,\n  LOAD_FOLLOWERS_FAILURE,\n  LOAD_FOLLOWINGS_REQUEST,\n  LOAD_FOLLOWINGS_SUCCESS,\n  LOAD_FOLLOWINGS_FAILURE,\n} from \"../constants/user\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n//takeEvery : 두번 눌렀을때 , 두개가 올라가게됨\n//takeLatest: 두번 연속 눌렀을때도 마지막 액션만 올라감.\n//takeLeading: 맨처음 하나만 올라감.\n//throttle: 설정한 시간동안 누른 동작이 여러개면, 하나만 액션동작\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data);\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowingsPI(data) {\n  return axios.get(\"/user/followings\", data);\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n//proxy, cors를 피해가는 방법중 하나. 브라우저=>프론트=>백엔드=>프론트=>브라우저\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followingAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\nfunction* following(action) {\n  try {\n    const result = yield call(followingAPI, action.data);\n    console.log(\"result\", result);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowingAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollowing(action) {\n  try {\n    const result = yield call(unfollowingAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    console.log(\"result\", result);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); // 위에 반복문 쓴것과 똑같이 작동\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollowing() {\n  yield takeLatest(FOLLOW_REQUEST, following);\n}\n\nfunction* watchUnfollowing() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollowing);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchFollowing),\n    fork(watchUnfollowing),\n    fork(watchLoadMyInfo),\n    fork(watchLoadFollowers),\n    fork(watchLoadFollowings),\n    fork(watchChangeNickname),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}