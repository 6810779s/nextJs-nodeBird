{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport Loading from \"../components/Loading\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../constants/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../constants/user\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Container } from \"@material-ui/core\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostLoading,\n    retweetFailure\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    if (retweetFailure) {\n      alert(retweetFailure);\n    }\n  }, [retweetFailure]);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1];\n      dispatch({\n        type: LOAD_POST_REQUEST\n      });\n    }\n  }, [inView]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, hasMorePosts && __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","Loading","PostCard","PostForm","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","useInView","Container","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostLoading","retweetFailure","post","ref","inView","alert","type","lastId","length","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,eAA3B;AAA4CC,IAAAA;AAA5C,MACJlB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACM,IAAlB,CADb;AAEA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,SAAS,EAA/B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,cAAJ,EAAoB;AAClBI,MAAAA,KAAK,CAACJ,cAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,cAAD,CAJM,CAAT;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACAI,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEjB;AADC,KAAD,CAAR;AAGD,GALQ,EAKN,EALM,CAAT;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,MAAM,IAAI,CAACJ,eAAX,IAA8BD,YAAlC,EAAgD;AAC9C,YAAMQ,MAAM,GAAGT,SAAS,CAACA,SAAS,CAACU,MAAV,GAAmB,CAApB,CAAxB;AACAd,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAEjB;AADC,OAAD,CAAR;AAGD;AACF,GAPQ,EAON,CAACe,MAAD,CAPM,CAAT;AASA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGG,SAAS,CAACW,GAAV,CAAeP,IAAD,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACQ,EAApB;AAAwB,IAAA,IAAI,EAAER,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,EAKE;AAAK,IAAA,GAAG,EAAEC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBJ,YAAY,IAAI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CALF,CADF;AASD,CAtCD;;AAwCA,eAAeN,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport Loading from \"../components/Loading\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../constants/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../constants/user\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Container } from \"@material-ui/core\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostLoading, retweetFailure } =\n    useSelector((state) => state.post);\n  const [ref, inView] = useInView();\n\n  useEffect(() => {\n    if (retweetFailure) {\n      alert(retweetFailure);\n    }\n  }, [retweetFailure]);\n\n  useEffect(() => {\n    dispatch({ type: LOAD_MY_INFO_REQUEST });\n    dispatch({\n      type: LOAD_POST_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1];\n      dispatch({\n        type: LOAD_POST_REQUEST,\n      });\n    }\n  }, [inView]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n      <div ref={ref}>{hasMorePosts && <Loading />}</div>\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}