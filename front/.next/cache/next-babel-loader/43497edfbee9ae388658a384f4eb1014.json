{"ast":null,"code":"import { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_ME, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { generateDummyPost } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`api/post`, data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000); // const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* warchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComments), fork(warchRemovePost), fork(warchLoadPost)]);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/post.js"],"names":["LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","all","fork","put","takeLatest","delay","call","axios","generateDummyPost","addPostAPI","data","post","content","addPost","action","result","type","id","err","error","response","removePostAPI","delete","removePost","console","addCommentsAPI","postId","addComments","loadPostAPI","get","loadPost","watchAddPost","warchRemovePost","watchAddComments","warchLoadPost","postSaga"],"mappings":"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","sourcesContent":["import {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  ADD_POST_TO_ME,\n  REMOVE_POST_OF_ME,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n} from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { generateDummyPost } from \"../reducers/post\";\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", { content: data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`api/post`, data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* warchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComments),\n    fork(warchRemovePost),\n    fork(warchLoadPost),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}