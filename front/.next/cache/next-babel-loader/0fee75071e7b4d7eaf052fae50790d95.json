{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/program/nextJs-nodeBird/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport Loading from \"../components/Loading\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../constants/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../constants/user\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Container } from \"@material-ui/core\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostLoading,\n    retweetFailure\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    rootMargin: \"100px\"\n  });\n  useEffect(() => {\n    if (retweetFailure) {\n      alert(retweetFailure);\n    }\n  }, [retweetFailure]);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId\n      });\n    }\n  }, [inView, hasMorePosts, mainPosts, loadPostLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => {\n    var _mainPosts2;\n\n    return (// <PostCard post={post} key={post.id} />\n      __jsx(React.Fragment, {\n        key: post.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, __jsx(PostCard, {\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), post.id === ((_mainPosts2 = mainPosts[mainPosts.length - 1]) === null || _mainPosts2 === void 0 ? void 0 : _mainPosts2.id) && hasMorePosts ? __jsx(\"div\", {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      })) : \"\")\n    );\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","Loading","PostCard","PostForm","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","useInView","Container","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostLoading","retweetFailure","post","ref","inView","threshold","triggerOnce","unobserveOnEnter","rootMargin","alert","type","lastId","length","id","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport Loading from \"../components/Loading\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../constants/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../constants/user\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Container } from \"@material-ui/core\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostLoading, retweetFailure } =\n    useSelector((state) => state.post);\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    rootMargin: \"100px\",\n  });\n\n  useEffect(() => {\n    if (retweetFailure) {\n      alert(retweetFailure);\n    }\n  }, [retweetFailure]);\n\n  useEffect(() => {\n    dispatch({ type: LOAD_MY_INFO_REQUEST });\n    dispatch({\n      type: LOAD_POST_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId,\n      });\n    }\n  }, [inView, hasMorePosts, mainPosts, loadPostLoading]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        // <PostCard post={post} key={post.id} />\n        <React.Fragment key={post.id}>\n          <PostCard post={post} />\n          {post.id === mainPosts[mainPosts.length - 1]?.id && hasMorePosts ? (\n            <div ref={ref}>\n              <Loading />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </React.Fragment>\n      ))}\n      {/* <div ref={ref}>{hasMorePosts && <Loading />}</div>\n      {hasMorePosts ? (\n        <div ref={ref}>\n          <Loading />\n        </div>\n      ) : (\n        \"\"\n      )} */}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}