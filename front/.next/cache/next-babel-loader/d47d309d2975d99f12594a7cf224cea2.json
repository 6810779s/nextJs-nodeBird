{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch(); //   const imageInput = useRef();\n\n  const {\n    0: textAreaValue,\n    1: setTextAreaValue\n  } = useState(\"\");\n  const onChangeText = useCallback(e => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const text = data.get(\"dailyText\");\n    const formData = new FormData();\n    imagePaths.forEach(i => {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", text);\n\n    if (data.get(\"dailyText\") !== \"\") {\n      return dispatch({\n        type: ADD_POST_REQUEST,\n        data: formData\n      });\n    }\n  };\n\n  const onChangeImage = useCallback(e => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(TextareaAutosize, {\n    name: \"dailyText\",\n    id: \"dailyText\",\n    \"aria-label\": \"minimum height\",\n    value: textAreaValue,\n    onChange: onChangeText,\n    minRows: 5,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    autoFocus: true,\n    style: {\n      width: \"100%\"\n    }\n  }), __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    ref: imageInput,\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    onChange: onChangeImage\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    variant: \"contained\"\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\")), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      marginTop: \"10px\"\n    }\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", null, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v\n  }), __jsx(\"div\", null, __jsx(Button, {\n    onClick: onRemoveImage(i)\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}