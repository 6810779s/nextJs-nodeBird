{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addComments),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(likeButton),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unlikeButton),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(warchRemovePost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComments),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(warchLoadPost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikeButton),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikeButton),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_ME, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE, UNLIKE_BUTTON_REQUEST, UNLIKE_BUTTON_SUCCESS, UNLIKE_BUTTON_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 8:\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"err:\", _context2.t0);\n          _context2.next = 15;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: REMOVE_POST_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComments(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComments$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(addCommentsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: ADD_COMMENTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: ADD_COMMENTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LOAD_POST_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction likeButtonAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likeButton(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likeButton$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(likeButtonAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log(result); //result에 postid와 userid가 들어가 있음\n\n          _context5.next = 7;\n          return put({\n            type: LIKE_BUTTON_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(\"likeerror\", _context5.t0);\n          _context5.next = 14;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: LIKE_BUTTON_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction unlikeButtonAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikeButton(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikeButton$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unlikeButtonAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: UNLIKE_BUTTON_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 13;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: UNLIKE_BUTTON_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios[\"delete\"]();\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: UNLIKE_BUTTON_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            //put은 액션 dispatch와 비슷한것\n            type: UNLIKE_BUTTON_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction warchRemovePost() {\n  return _regeneratorRuntime.wrap(function warchRemovePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchAddComments() {\n  return _regeneratorRuntime.wrap(function watchAddComments$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(ADD_COMMENTS_REQUEST, addComments);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction warchLoadPost() {\n  return _regeneratorRuntime.wrap(function warchLoadPost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchLikeButton() {\n  return _regeneratorRuntime.wrap(function watchLikeButton$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchUnlikeButton() {\n  return _regeneratorRuntime.wrap(function watchUnlikeButton$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(UNLIKE_BUTTON_REQUEST, unlikeButton);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(UNLIKE_BUTTON_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComments), fork(warchRemovePost), fork(warchLoadPost), fork(watchLikeButton), fork(watchUnlikeButton), fork(watchUploadImages)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/post.js"],"names":["addPost","removePost","addComments","loadPost","likeButton","unlikeButton","uploadImages","watchAddPost","warchRemovePost","watchAddComments","warchLoadPost","watchLikeButton","watchUnlikeButton","watchUploadImages","postSaga","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","all","fork","put","takeLatest","delay","call","axios","addPostAPI","data","post","content","action","result","type","id","error","response","removePostAPI","console","addCommentsAPI","postId","loadPostAPI","get","likeButtonAPI","patch","log","unlikeButtonAPI","uploadImagesAPI"],"mappings":"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","sourcesContent":["import {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  ADD_POST_TO_ME,\n  REMOVE_POST_OF_ME,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n} from \"../constants/post\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", { content: data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentsAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComments(action) {\n  try {\n    const result = yield call(addCommentsAPI, action.data);\n    yield put({\n      type: ADD_COMMENTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: ADD_COMMENTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/posts`, data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeButtonAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likeButton(action) {\n  try {\n    const result = yield call(likeButtonAPI, action.data);\n    console.log(result);\n    //result에 postid와 userid가 들어가 있음\n    yield put({\n      type: LIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(\"likeerror\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikeButtonAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikeButton(action) {\n  try {\n    const result = yield call(unlikeButtonAPI, action.data);\n    yield put({\n      type: UNLIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UNLIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.delete();\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UNLIKE_BUTTON_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: UNLIKE_BUTTON_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* warchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComments() {\n  yield takeLatest(ADD_COMMENTS_REQUEST, addComments);\n}\n\nfunction* warchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikeButton() {\n  yield takeLatest(LIKE_BUTTON_REQUEST, likeButton);\n}\n\nfunction* watchUnlikeButton() {\n  yield takeLatest(UNLIKE_BUTTON_REQUEST, unlikeButton);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UNLIKE_BUTTON_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComments),\n    fork(warchRemovePost),\n    fork(warchLoadPost),\n    fork(watchLikeButton),\n    fork(watchUnlikeButton),\n    fork(watchUploadImages),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}