{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174\\u1111\\u1169\\u11AF\\u1103\\u1165/programming/program/react-web/nextJs-nodeBird/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Box, Button, Input } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { ADD_COMMENTS_REQUEST } from \"../constants/post\";\nimport styles from \"../styles/CommentForm.module.scss\";\nimport useInput from \"../hooks/useInput\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const [comment, setComment, reset] = useInput({\n    comment: \"\"\n  });\n  const commentText = useRef(null);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentsDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentsDone) {\n      re;\n    }\n  }, [addCommentsDone]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (comment.comment) {\n      dispatch({\n        type: ADD_COMMENTS_REQUEST,\n        data: {\n          content: comment.comment,\n          postId: post.id,\n          userId: id\n        }\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    name: \"comment\",\n    value: comment.comment,\n    onChange: setComment,\n    placeholder: \"\\uB313\\uAE00 \\uB2EC\\uAE30...\",\n    type: \"text\",\n    ref: commentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    className: styles.addCommentBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/components/CommentForm.js"],"names":["React","useRef","useState","useEffect","Box","Button","Input","useDispatch","useSelector","PropTypes","ADD_COMMENTS_REQUEST","styles","useInput","CommentForm","post","dispatch","comment","setComment","reset","commentText","id","state","user","me","addCommentsDone","re","handleSubmit","e","preventDefault","type","data","content","postId","userId","container","flex","addCommentBtn","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,EAAsBC,KAAtB,IAA+BN,QAAQ,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA7C;AACA,QAAMG,WAAW,GAAGlB,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMmB,EAAE,GAAGZ,WAAW,CAAEa,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAsBhB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACP,IAAlB,CAAvC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,eAAJ,EAAqB;AACnBC,MAAAA,EAAE;AACH;AACF,GAJQ,EAIN,CAACD,eAAD,CAJM,CAAT;;AAKA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIZ,OAAO,CAACA,OAAZ,EAAqB;AACnBD,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEnB,oBADC;AAEPoB,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAEf,OAAO,CAACA,OADb;AAEJgB,UAAAA,MAAM,EAAElB,IAAI,CAACM,EAFT;AAGJa,UAAAA,MAAM,EAAEb;AAHJ;AAFC,OAAD,CAAR;AAQD;AACF,GAbD;;AAcA,SACE,4BACE,MAAC,GAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,QAAQ,EAAEM,YAHZ;AAIE,IAAA,SAAS,EAAEf,MAAM,CAACuB,SAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADT;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEnB,OAAO,CAACA,OAHjB;AAIE,IAAA,QAAQ,EAAEC,UAJZ;AAKE,IAAA,WAAW,EAAC,8BALd;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,GAAG,EAAEE,WAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAeE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAER,MAAM,CAACyB,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,CADF,CADF;AAuBD,CAhDD;;AAkDAvB,WAAW,CAACwB,SAAZ,GAAwB;AACtBvB,EAAAA,IAAI,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe1B,WAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Box, Button, Input } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { ADD_COMMENTS_REQUEST } from \"../constants/post\";\nimport styles from \"../styles/CommentForm.module.scss\";\nimport useInput from \"../hooks/useInput\";\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const [comment, setComment, reset] = useInput({ comment: \"\" });\n  const commentText = useRef(null);\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentsDone } = useSelector((state) => state.post);\n  useEffect(() => {\n    if (addCommentsDone) {\n      re;\n    }\n  }, [addCommentsDone]);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (comment.comment) {\n      dispatch({\n        type: ADD_COMMENTS_REQUEST,\n        data: {\n          content: comment.comment,\n          postId: post.id,\n          userId: id,\n        },\n      });\n    }\n  };\n  return (\n    <>\n      <Box\n        component=\"form\"\n        noValidate\n        onSubmit={handleSubmit}\n        className={styles.container}\n      >\n        <Input\n          style={{ flex: 1 }}\n          name=\"comment\"\n          value={comment.comment}\n          onChange={setComment}\n          placeholder=\"댓글 달기...\"\n          type=\"text\"\n          ref={commentText}\n        />\n        <Button type=\"submit\" className={styles.addCommentBtn}>\n          게시\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}