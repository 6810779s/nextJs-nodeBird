{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174\\u1111\\u1169\\u11AF\\u1103\\u1165/programming/program/react-web/nextJs-nodeBird/front/pages/user/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { Avatar, Divider, Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\nimport UserProfile from \"../../components/UserProfile\";\nimport styles from \"../../styles/userPosts.module.scss\";\nconst useStyles = makeStyles({\n  profileWrap: {\n    maxWidth: \"500px\",\n    margin: \"auto\",\n    padding: \"30px\"\n  },\n  typographyBox: {\n    width: \"55px\",\n    background: \"#E6E6E6\",\n    textAlign: \"center\"\n  },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\"\n  }\n});\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true\n  });\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id\n      });\n    }\n  }, [inView]);\n  console.log(\"userInfo:\", userInfo);\n  console.log(\"mainPosts:\", mainPosts);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.wrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, userInfo && __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), userInfo ? __jsx(UserProfile, {\n    info: userInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }) : \"\", mainPosts.map(post => {\n    var _mainPosts2;\n\n    return (// <PostCard post={post} key={post.id} />\n      __jsx(React.Fragment, {\n        key: post.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, __jsx(PostCard, {\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), post.id === ((_mainPosts2 = mainPosts[mainPosts.length - 1]) === null || _mainPosts2 === void 0 ? void 0 : _mainPosts2.id) && hasMorePosts ? __jsx(\"div\", {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      })) : \"\")\n    );\n  }))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  ``;\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/pages/user/[id].js"],"names":["React","useEffect","useCallback","useRouter","useInView","useDispatch","useSelector","AppLayout","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","wrapper","axios","END","Head","Avatar","Divider","Card","CardContent","CardHeader","Typography","makeStyles","PostCard","Loading","UserProfile","styles","useStyles","profileWrap","maxWidth","margin","padding","typographyBox","width","background","textAlign","cardLayout","User","dispatch","classes","userInfo","state","user","mainPosts","hasMorePosts","loadPostLoading","post","ref","inView","threshold","triggerOnce","unobserveOnEnter","delay","trackVisibility","router","id","query","lastId","length","type","data","console","log","container","wrap","nickname","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport {\n  Avatar,\n  Divider,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\nimport UserProfile from \"../../components/UserProfile\";\nimport styles from \"../../styles/userPosts.module.scss\";\nconst useStyles = makeStyles({\n  profileWrap: { maxWidth: \"500px\", margin: \"auto\", padding: \"30px\" },\n  typographyBox: { width: \"55px\", background: \"#E6E6E6\", textAlign: \"center\" },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\",\n  },\n});\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { userInfo } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n    (state) => state.post\n  );\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id,\n      });\n    }\n  }, [inView]);\n  console.log(\"userInfo:\", userInfo);\n  console.log(\"mainPosts:\", mainPosts);\n  return (\n    <AppLayout>\n      <div className={styles.container}>\n        <div className={styles.wrap}>\n          {userInfo && (\n            <Head>\n              <title>{userInfo.nickname}님의 글</title>\n              <meta\n                name=\"description\"\n                content={`${userInfo.nickname}님의 게시글`}\n              />\n              <meta\n                property=\"og:title\"\n                content={`${userInfo.nickname}님의 게시글`}\n              />\n              <meta\n                property=\"og:description\"\n                content={`${userInfo.nickname}님의 게시글`}\n              />\n              {/* <meta property=\"og:image\" content={singlePost.Images[0]?singlePost.Images[0].src:\"https://nodebird.com/favicon.icon\"}/>\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`}/> */}\n            </Head>\n          )}\n          {userInfo ? <UserProfile info={userInfo} /> : \"\"}\n          {mainPosts.map((post) => (\n            // <PostCard post={post} key={post.id} />\n            <React.Fragment key={post.id}>\n              <PostCard post={post} />\n              {post.id === mainPosts[mainPosts.length - 1]?.id &&\n              hasMorePosts ? (\n                <div ref={ref}>\n                  <Loading />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: context.params.id,\n    });\n    ``;\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}