{"ast":null,"code":"// import shortId from \"shortid\";\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENTS_REQUEST, ADD_COMMENTS_SUCCESS, ADD_COMMENTS_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LIKE_BUTTON_REQUEST, LIKE_BUTTON_SUCCESS, LIKE_BUTTON_FAILURE, UNLIKE_BUTTON_REQUEST, UNLIKE_BUTTON_SUCCESS, UNLIKE_BUTTON_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, REMOVE_IMAGE } from \"../constants/post\";\nimport produce from \"immer\"; // import faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsFailure: null,\n  loadUserPostsLoading: false,\n  loadUserPostsDone: false,\n  loadUserPostsFailure: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostFailure: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostFailure: null,\n  addCommentsLoading: false,\n  addCommentsDone: false,\n  addCommentsFailure: null,\n  likeButtonLoading: false,\n  likeButtonDone: false,\n  likeButtonFailure: null,\n  unlikeButtonLoading: false,\n  unlikeButtonDone: false,\n  unlikeButtonFailure: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesFailure: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetFailure: null\n}; // export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport const addPost = data => {\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addComments = data => {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n\n      case LIKE_BUTTON_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likeButtonLoading = false;\n          draft.likeButtonDone = true;\n          break;\n        }\n\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n\n      case UNLIKE_BUTTON_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n          draft.unlikeButtonLoading = false;\n          draft.unlikeButtonDone = true;\n          break;\n        }\n\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostFailure = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostFailure = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n\n      case LOAD_USER_POSTS_REQUEST:\n        draft.loadUserPostsLoading = true;\n        draft.loadUserPostsDone = false;\n        draft.loadUserPostsFailure = null;\n        break;\n\n      case LOAD_USER_POSTS_SUCCESS:\n        draft.loadUserPostsLoading = false;\n        draft.loadUserPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n\n      case LOAD_USER_POSTS_FAILURE:\n        draft.loadUserPostsLoading = false;\n        draft.loadUserPostsFailure = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n\n      case ADD_COMMENTS_SUCCESS:\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/reducers/post.js"],"names":["LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","ADD_COMMENTS_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","produce","initialState","mainPosts","singlePost","imagePaths","hasMorePosts","loadPostLoading","loadPostDone","loadPostFailure","loadPostsLoading","loadPostsDone","loadPostsFailure","loadUserPostsLoading","loadUserPostsDone","loadUserPostsFailure","addPostLoading","addPostDone","addPostFailure","removePostLoading","removePostDone","removePostFailure","addCommentsLoading","addCommentsDone","addCommentsFailure","likeButtonLoading","likeButtonDone","likeButtonFailure","unlikeButtonLoading","unlikeButtonDone","unlikeButtonFailure","uploadImagesLoading","uploadImagesDone","uploadImagesFailure","retweetLoading","retweetDone","retweetFailure","addPost","data","type","addComments","rootReducer","state","action","draft","filter","v","i","unshift","error","post","find","id","PostId","Likers","push","UserId","length","concat","Comments","removePostLoadin"],"mappings":"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","sourcesContent":["// import shortId from \"shortid\";\nimport {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  REMOVE_IMAGE,\n} from \"../constants/post\";\nimport produce from \"immer\";\n// import faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsFailure: null,\n  loadUserPostsLoading: false,\n  loadUserPostsDone: false,\n  loadUserPostsFailure: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostFailure: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostFailure: null,\n  addCommentsLoading: false,\n  addCommentsDone: false,\n  addCommentsFailure: null,\n  likeButtonLoading: false,\n  likeButtonDone: false,\n  likeButtonFailure: null,\n  unlikeButtonLoading: false,\n  unlikeButtonDone: false,\n  unlikeButtonFailure: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesFailure: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetFailure: null,\n};\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport const addPost = (data) => {\n  return {\n    type: ADD_POST_REQUEST,\n    data,\n  };\n};\n\nexport const addComments = (data) => {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data,\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n      case LIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likeButtonLoading = false;\n        draft.likeButtonDone = true;\n        break;\n      }\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n      case UNLIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonDone = true;\n        break;\n      }\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostFailure = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostFailure = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n      case LOAD_USER_POSTS_REQUEST:\n        draft.loadUserPostsLoading = true;\n        draft.loadUserPostsDone = false;\n        draft.loadUserPostsFailure = null;\n        break;\n      case LOAD_USER_POSTS_SUCCESS:\n        draft.loadUserPostsLoading = false;\n        draft.loadUserPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n      case LOAD_USER_POSTS_FAILURE:\n        draft.loadUserPostsLoading = false;\n        draft.loadUserPostsFailure = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n      case ADD_COMMENTS_SUCCESS:\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}