{"ast":null,"code":"import { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE } from \"../constants/user\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\"; //takeEvery : 두번 눌렀을때 , 두개가 올라가게됨\n//takeLatest: 두번 연속 눌렀을때도 마지막 액션만 올라감.\n//takeLeading: 맨처음 하나만 올라감.\n//throttle: 설정한 시간동안 누른 동작이 여러개면, 하나만 액션동작\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\"); //baseURL = \"http://localhost:3065\";\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserInfoAPI() {\n  return axios.get(\"/user\"); //baseURL = \"http://localhost:3065\";\n}\n\nfunction* loadUserInfo(action) {\n  try {\n    const result = yield call(loadUserInfoAPI, action.data);\n    yield put({\n      type: LOAD_User_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_User_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data); //baseURL = \"http://localhost:3065\";\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsPI(data) {\n  return axios.get(\"/user/followings\", data); //baseURL = \"http://localhost:3065\";\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data); //baseURL = \"http://localhost:3065\";\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n} //proxy, cors를 피해가는 방법중 하나. 브라우저=>프론트=>백엔드=>프론트=>브라우저\n\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followingAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* following(action) {\n  try {\n    const result = yield call(followingAPI, action.data);\n    console.log(\"result\", result);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowingAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollowing(action) {\n  try {\n    const result = yield call(unfollowingAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    console.log(\"result\", result);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); // 위에 반복문 쓴것과 똑같이 작동\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollowing() {\n  yield takeLatest(FOLLOW_REQUEST, following);\n}\n\nfunction* watchUnfollowing() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollowing);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUserInfo() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUserInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollowing), fork(watchUnfollowing), fork(watchLoadMyInfo), fork(watchLoadUserInfo), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/program/nextJs-nodeBird/front/sagas/user.js"],"names":["LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","all","fork","put","takeLatest","delay","call","axios","loadMyInfoAPI","get","loadMyInfo","action","result","data","type","err","error","response","loadUserInfoAPI","loadUserInfo","LOAD_User_SUCCESS","LOAD_User_FAILURE","loadFollowersAPI","loadFollowers","loadFollowingsPI","loadFollowings","logInAPI","post","logIn","logOutAPI","logOut","console","signUpAPI","signUp","followingAPI","patch","following","log","unfollowingAPI","delete","unfollowing","changeNicknameAPI","nickname","changeNickname","watchLogIn","watchLogOut","watchSignUp","watchFollowing","watchUnfollowing","watchLoadMyInfo","watchLoadUserInfo","watchChangeNickname","watchLoadFollowers","watchLoadFollowings","userSaga"],"mappings":"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","sourcesContent":["import {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWERS_SUCCESS,\n  LOAD_FOLLOWERS_FAILURE,\n  LOAD_FOLLOWINGS_REQUEST,\n  LOAD_FOLLOWINGS_SUCCESS,\n  LOAD_FOLLOWINGS_FAILURE,\n} from \"../constants/user\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n//takeEvery : 두번 눌렀을때 , 두개가 올라가게됨\n//takeLatest: 두번 연속 눌렀을때도 마지막 액션만 올라감.\n//takeLeading: 맨처음 하나만 올라감.\n//throttle: 설정한 시간동안 누른 동작이 여러개면, 하나만 액션동작\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserInfoAPI() {\n  return axios.get(\"/user\");\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadUserInfo(action) {\n  try {\n    const result = yield call(loadUserInfoAPI, action.data);\n\n    yield put({\n      type: LOAD_User_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_User_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data);\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowingsPI(data) {\n  return axios.get(\"/user/followings\", data);\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n  //baseURL = \"http://localhost:3065\";\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(\"err:\", err);\n    yield put({\n      //put은 액션 dispatch와 비슷한것\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n//proxy, cors를 피해가는 방법중 하나. 브라우저=>프론트=>백엔드=>프론트=>브라우저\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followingAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\nfunction* following(action) {\n  try {\n    const result = yield call(followingAPI, action.data);\n    console.log(\"result\", result);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowingAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollowing(action) {\n  try {\n    const result = yield call(unfollowingAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    console.log(\"result\", result);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); // 위에 반복문 쓴것과 똑같이 작동\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollowing() {\n  yield takeLatest(FOLLOW_REQUEST, following);\n}\n\nfunction* watchUnfollowing() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollowing);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\nfunction* watchLoadUserInfo() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUserInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchFollowing),\n    fork(watchUnfollowing),\n    fork(watchLoadMyInfo),\n    fork(watchLoadUserInfo),\n    fork(watchLoadFollowers),\n    fork(watchLoadFollowings),\n    fork(watchChangeNickname),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}