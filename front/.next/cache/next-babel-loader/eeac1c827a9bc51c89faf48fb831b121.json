{"ast":null,"code":"var _jsxFileName = \"/Users/eunheejang/Desktop/\\u110B\\u1173\\u11AB\\u1112\\u1174/programming/nextJs-nodeBird/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch(); //   const imageInput = useRef();\n\n  const {\n    0: textAreaValue,\n    1: setTextAreaValue\n  } = useState(\"\");\n  const onChangeText = useCallback(e => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  console.log(\"addPostDone:\", addPostDone);\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    if (data.get(\"dailyText\") !== \"\") {\n      console.log(\"dailyText:\", data.get(\"dailyText\"));\n      dispatch(addPost(data.get(\"dailyText\")));\n    }\n  }; //   const onClickImageUpload = useCallback(() => {\n  //     imageInput.current.click();\n  //   }, [imageInput.current]);\n\n\n  return __jsx(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(TextareaAutosize, {\n    name: \"dailyText\",\n    id: \"dailyText\",\n    \"aria-label\": \"minimum height\",\n    value: textAreaValue,\n    onChange: onChangeText,\n    minRows: 5,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    autoFocus: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    accept: \"image/*\",\n    multiple: true,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희/programming/nextJs-nodeBird/front/components/PostForm.js"],"names":["Box","Button","Input","TextareaAutosize","React","useCallback","useState","useEffect","useDispatch","useSelector","addPost","PostForm","dispatch","textAreaValue","setTextAreaValue","onChangeText","e","target","value","imagePaths","addPostDone","state","post","console","log","handleSubmit","preventDefault","data","FormData","currentTarget","get","width","marginTop","map","v","display"],"mappings":"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","sourcesContent":["import { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  //   const imageInput = useRef();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const onChangeText = useCallback((e) => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  console.log(\"addPostDone:\", addPostDone);\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    if (data.get(\"dailyText\") !== \"\") {\n      console.log(\"dailyText:\", data.get(\"dailyText\"));\n      dispatch(addPost(data.get(\"dailyText\")));\n    }\n  };\n\n  //   const onClickImageUpload = useCallback(() => {\n  //     imageInput.current.click();\n  //   }, [imageInput.current]);\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit}>\n      <TextareaAutosize\n        name=\"dailyText\"\n        id=\"dailyText\"\n        aria-label=\"minimum height\"\n        value={textAreaValue}\n        onChange={onChangeText}\n        minRows={5}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n        autoFocus\n        style={{ width: \"100%\" }}\n      />\n      <Input accept=\"image/*\" multiple type=\"file\" />\n      {/* <Input type=\"file\" hidden ref={imageInput} /> */}\n      {/* <Button onClick={onClickImageUpload} variant=\"contained\">\n        이미지 업로드\n      </Button> */}\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        style={{ marginTop: \"10px\" }}\n      >\n        짹짹\n      </Button>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}