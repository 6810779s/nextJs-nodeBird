{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import thunkMiddleware from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar loggerMidleware = function loggerMidleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      next(action);\n      return;\n    };\n  };\n}; //action 실행전 콘솔로그를 찍어주는 미들웨어\n\n\nvar configureStore = function configureStore() {\n  // const store = createStore(rootReducer, composeWithDevTools());\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMidleware];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //개발용\n\n  var store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/nextJs-nodeBird/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","rootReducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMidleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,IAAMC,eAAe,GACnB,SADIA,eACJ;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SACA,UAACC,IAAD;AAAA,WACA,UAACC,MAAD,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACA;AACD,KALD;AAAA,GADA;AAAA,CADF,C,CAOK;;;AACL,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AACA,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBR,eAAjB,CAApB;AACA,MAAMU,QAAQ,GACZ,OACIf,OAAO,CAACD,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADX,CAC6C;AAD7C,IAEIZ,mBAAmB,CAACH,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAHzB,CAJ2B,CAOiC;;AAC5D,MAAME,KAAK,GAAGlB,WAAW,CAACG,WAAD,EAAcc,QAAd,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AAEA,SAAOY,KAAP;AACD,CAZD;;AAcA,IAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nconst loggerMidleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    next(action);\n    return;\n  }; //action 실행전 콘솔로그를 찍어주는 미들웨어\nconst configureStore = () => {\n  // const store = createStore(rootReducer, composeWithDevTools());\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMidleware];\n  const enhancer =\n    process.env.NODE_ENV === 'production'\n      ? compose(applyMiddleware(...middlewares)) //배포용\n      : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}