{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import thunkMiddleware from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst loggerMidleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  next(action);\n  return;\n}; //action 실행전 콘솔로그를 찍어주는 미들웨어\n\n\nconst configureStore = () => {\n  // const store = createStore(rootReducer, composeWithDevTools());\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMidleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/eunheejang/Desktop/은희폴더/programming/program/react-web/nextJs-nodeBird/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","rootReducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMidleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,MAAMC,eAAe,GACnB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACCC,IAAD,IACCC,MAAD,IAAY;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACA;AACD,CAPH,C,CAOK;;;AACL,MAAMG,cAAc,GAAG,MAAM;AAC3B;AACA,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBR,eAAjB,CAApB;AACA,QAAMU,QAAQ,GACZ,QACIf,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADX,CAC6C;AAD7C,IAEIZ,mBAAmB,CAACH,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAHzB,CAJ2B,CAOiC;;AAC5D,QAAME,KAAK,GAAGlB,WAAW,CAACG,WAAD,EAAcc,QAAd,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AAEA,SAAOY,KAAP;AACD,CAZD;;AAcA,MAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nconst loggerMidleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    next(action);\n    return;\n  }; //action 실행전 콘솔로그를 찍어주는 미들웨어\nconst configureStore = () => {\n  // const store = createStore(rootReducer, composeWithDevTools());\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMidleware];\n  const enhancer =\n    process.env.NODE_ENV === 'production'\n      ? compose(applyMiddleware(...middlewares)) //배포용\n      : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}