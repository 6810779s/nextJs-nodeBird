{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack://_N_E/./pages/user/.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?e7a7","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","arrayLikeToArray","module","exports","arr","Array","isArray","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","key","i","len","metatype","category","categories","unique","c","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_setPrototypeOf","o","p","setPrototypeOf","__proto__","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","sort","filter","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","_excluded","isPlainChildren","children","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","useInView","_temp","_ref","_React$useState","setRef","current","result","displayName","defaultProps","useStyles","makeStyles","profileWrap","maxWidth","margin","padding","typographyBox","width","background","textAlign","cardLayout","User","dispatch","useDispatch","classes","userInfo","useSelector","user","post","mainPosts","hasMorePosts","loadPostLoading","unobserveOnEnter","useRouter","query","useEffect","lastId","type","LOAD_USER_POSTS_REQUEST","data","nickname","property","className","avatar","aria-label","title","style","display","justifyContent","Posts","height","orientation","Followers","Followings","Fragment","_hasHeadManager","emitChange","componentDidMount","Component","__NEXT_P","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","obj","value","defineProperty","enumerable","configurable","writable","iter","Symbol","iterator","from"],"mappings":"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","file":"static/chunks/pages/user/[id]-68e3eb54aa1908cd9ebc.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options, fallbackInView) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (fallbackInView === void 0) {\n    fallbackInView = unsupportedValue;\n  }\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap[\"delete\"](id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay,\n        fallbackInView = _this$props.fallbackInView;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, InView as default, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n","import React, { useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../constants/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../constants/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport {\n  Avatar,\n  Divider,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard\";\nimport Loading from \"../../components/Loading\";\n\nconst useStyles = makeStyles({\n  profileWrap: { maxWidth: \"500px\", margin: \"auto\", padding: \"30px\" },\n  typographyBox: { width: \"55px\", background: \"#E6E6E6\", textAlign: \"center\" },\n  cardLayout: {\n    maxWidth: \"400px\",\n    margin: \"20px auto\",\n  },\n});\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { userInfo } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n    (state) => state.post\n  );\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        lastId,\n        data: id,\n      });\n    }\n  }, [inView]);\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>{userInfo.nickname}님의 글</title>\n          <meta\n            name=\"description\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:title\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:description\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          {/* <meta property=\"og:image\" content={singlePost.Images[0]?singlePost.Images[0].src:\"https://nodebird.com/favicon.icon\"}/>\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`}/> */}\n        </Head>\n      )}\n      {userInfo ? (\n        <Card className={classes.cardLayout}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"userProfile\">{userInfo.nickname[0]}</Avatar>\n            }\n            title={userInfo.nickname}\n          />\n          <CardContent\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography className={classes.typographyBox}>\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </Typography>\n            <Divider style={{ height: 50 }} orientation=\"vertical\" />\n            <Typography className={classes.typographyBox}>\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        \"\"\n      )}\n      {mainPosts.map((post) => (\n        // <PostCard post={post} key={post.id} />\n        <React.Fragment key={post.id}>\n          <PostCard post={post} />\n          {post.id === mainPosts[mainPosts.length - 1]?.id && hasMorePosts ? (\n            <div ref={ref}>\n              <Loading />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </React.Fragment>\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: context.params.id,\n    });\n``\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default User;\n","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/[id]\",\n      function () {\n        return require(\"private-next-pages/user/[id].js\");\n      }\n    ]);\n  ","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;"],"sourceRoot":""}