{"version":3,"sources":["webpack://_N_E/./node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/./reducers/post.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_setPrototypeOf","o","p","setPrototypeOf","__proto__","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","keys","sort","filter","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","_excluded","isPlainChildren","props","children","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","useInView","_temp","_ref","_React$useState","setRef","current","result","displayName","defaultProps","PostForm","dispatch","useDispatch","useState","textAreaValue","setTextAreaValue","onChangeText","useCallback","e","value","useSelector","post","imagePaths","addPostDone","useEffect","imageInput","useRef","onChangeImage","imageFormData","FormData","files","f","append","type","UPLOAD_IMAGES_REQUEST","data","onClickImageUpload","click","onRemoveImage","index","REMOVE_IMAGE","Box","component","noValidate","onSubmit","preventDefault","currentTarget","text","formData","ADD_POST_REQUEST","TextareaAutosize","name","aria-label","minRows","placeholder","autoFocus","style","width","multiple","hidden","Button","onClick","variant","fullWidth","marginTop","v","display","src","alt","Home","me","user","mainPosts","hasMorePosts","loadPostLoading","retweetFailure","unobserveOnEnter","alert","lastId","LOAD_POSTS_REQUEST","AppLayout","Fragment","PostCard","Loading","initialState","singlePost","loadPostDone","loadPostFailure","loadPostsLoading","loadPostsDone","loadPostsFailure","addPostLoading","addPostFailure","removePostLoading","removePostDone","removePostFailure","addCommentsLoading","addCommentsDone","addCommentsFailure","likeButtonLoading","likeButtonDone","likeButtonFailure","unlikeButtonLoading","unlikeButtonDone","unlikeButtonFailure","uploadImagesLoading","uploadImagesDone","uploadImagesFailure","retweetLoading","retweetDone","rootReducer","action","produce","draft","RETWEET_REQUEST","RETWEET_SUCCESS","unshift","RETWEET_FAILURE","error","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_BUTTON_REQUEST","LIKE_BUTTON_SUCCESS","find","PostId","Likers","UserId","LIKE_BUTTON_FAILURE","UNLIKE_BUTTON_REQUEST","UNLIKE_BUTTON_SUCCESS","UNLIKE_BUTTON_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_USER_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_USER_POSTS_SUCCESS","LOAD_POSTS_SUCCESS","concat","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_FAILURE","LOAD_POSTS_FAILURE","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENTS_REQUEST","ADD_COMMENTS_SUCCESS","Comments","ADD_COMMENTS_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","removePostLoadin","__NEXT_P"],"mappings":"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","file":"static/chunks/pages/index-c7cbbcdbe85aafda1fbc.js","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options, fallbackInView) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (fallbackInView === void 0) {\n    fallbackInView = unsupportedValue;\n  }\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap[\"delete\"](id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay,\n        fallbackInView = _this$props.fallbackInView;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, InView as default, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n","import { Box, Button, Input, TextareaAutosize } from \"@material-ui/core\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ADD_POST_REQUEST,\n  REMOVE_IMAGE,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../constants/post\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  //   const imageInput = useRef();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const onChangeText = useCallback((e) => {\n    setTextAreaValue(e.target.value);\n  }, []);\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setTextAreaValue(\"\");\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const text = data.get(\"dailyText\");\n    const formData = new FormData();\n    imagePaths.forEach((i) => {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", text);\n    if (data.get(\"dailyText\") !== \"\") {\n      return dispatch({ type: ADD_POST_REQUEST, data: formData });\n    }\n  };\n\n  const onChangeImage = useCallback((e) => {\n    const imageFormData = new FormData();\n\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({ type: UPLOAD_IMAGES_REQUEST, data: imageFormData });\n  });\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({ type: REMOVE_IMAGE, data: index });\n  });\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit}>\n      <TextareaAutosize\n        name=\"dailyText\"\n        id=\"dailyText\"\n        aria-label=\"minimum height\"\n        value={textAreaValue}\n        onChange={onChangeText}\n        minRows={5}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n        autoFocus\n        style={{ width: \"100%\" }}\n      />\n      {/* <Input accept=\"image/*\" multiple type=\"file\" /> */}\n      <div>\n        <input\n          type=\"file\"\n          ref={imageInput}\n          name=\"image\"\n          multiple\n          hidden\n          onChange={onChangeImage}\n        />\n        <Button onClick={onClickImageUpload} variant=\"contained\">\n          이미지 업로드\n        </Button>\n      </div>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        style={{ marginTop: \"10px\" }}\n      >\n        짹짹\n      </Button>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default PostForm;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport Loading from \"../components/Loading\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../constants/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../constants/user\";\nimport { useInView } from \"react-intersection-observer\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostLoading, retweetFailure } =\n    useSelector((state) => state.post);\n  const [ref, inView] = useInView({\n    threshold: 1,\n    triggerOnce: true,\n    unobserveOnEnter: true,\n    delay: 1000,\n    trackVisibility: true,\n  });\n\n  useEffect(() => {\n    if (retweetFailure) {\n      alert(retweetFailure);\n    }\n  }, [retweetFailure]);\n\n  // useEffect(() => {\n  //   dispatch({ type: LOAD_MY_INFO_REQUEST });\n  //   dispatch({\n  //     type: LOAD_POST_REQUEST,\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    if (inView && !loadPostLoading && hasMorePosts) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n      });\n    }\n  }, [inView]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        // <PostCard post={post} key={post.id} />\n        <React.Fragment key={post.id}>\n          <PostCard post={post} />\n          {post.id === mainPosts[mainPosts.length - 1]?.id && hasMorePosts ? (\n            <div ref={ref}>\n              <Loading />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </React.Fragment>\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    console.log(\"getServerSideProps start\");\n    console.log(context.req.headers);\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    // axios.defaults.headers.Cookie = cookie; //서버쪽으로 쿠키전달\n    //위 두 줄만 입력할 경우, 쿠키가 공유되므로 아래 코드를 작성해줘야됨.\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n\n    //아래 코드는 next redux에서 그렇게 하라고 되어 있음.\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Home;\n","// import shortId from \"shortid\";\nimport {\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENTS_REQUEST,\n  ADD_COMMENTS_SUCCESS,\n  ADD_COMMENTS_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LIKE_BUTTON_REQUEST,\n  LIKE_BUTTON_SUCCESS,\n  LIKE_BUTTON_FAILURE,\n  UNLIKE_BUTTON_REQUEST,\n  UNLIKE_BUTTON_SUCCESS,\n  UNLIKE_BUTTON_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  REMOVE_IMAGE,\n} from \"../constants/post\";\nimport produce from \"immer\";\n// import faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostFailure: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsFailure: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostFailure: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostFailure: null,\n  addCommentsLoading: false,\n  addCommentsDone: false,\n  addCommentsFailure: null,\n  likeButtonLoading: false,\n  likeButtonDone: false,\n  likeButtonFailure: null,\n  unlikeButtonLoading: false,\n  unlikeButtonDone: false,\n  unlikeButtonFailure: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesFailure: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetFailure: null,\n};\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: \"https://picsum.photos/200/300\" }],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\nexport const addPost = (data) => {\n  return {\n    type: ADD_POST_REQUEST,\n    data,\n  };\n};\n\nexport const addComments = (data) => {\n  return {\n    type: ADD_COMMENTS_REQUEST,\n    data,\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetFailure = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetFailure = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesFailure = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesFailure = action.error;\n        break;\n      case LIKE_BUTTON_REQUEST:\n        draft.likeButtonLoading = true;\n        draft.likeButtonDone = false;\n        draft.likeButtonFailure = null;\n        break;\n      case LIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likeButtonLoading = false;\n        draft.likeButtonDone = true;\n        break;\n      }\n      case LIKE_BUTTON_FAILURE:\n        draft.likeButtonLoading = false;\n        draft.likeButtonFailure = action.error;\n        break;\n\n      case UNLIKE_BUTTON_REQUEST:\n        draft.unlikeButtonLoading = true;\n        draft.unlikeButtonDone = false;\n        draft.unlikeButtonFailure = null;\n        break;\n      case UNLIKE_BUTTON_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonDone = true;\n        break;\n      }\n      case UNLIKE_BUTTON_FAILURE:\n        draft.unlikeButtonLoading = false;\n        draft.unlikeButtonFailure = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostFailure = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostFailure = action.error;\n        break;\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_USER_POSTS_REQUEST:\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsFailure = null;\n        break;\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = action.data.length === 10;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        break;\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_USER_POSTS_FAILURE:\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsFailure = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostFailure = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostFailure = action.error;\n        break;\n      case ADD_COMMENTS_REQUEST:\n        draft.addCommentsLoading = true;\n        draft.addCommentsDone = false;\n        draft.addCommentsFailure = null;\n        break;\n      case ADD_COMMENTS_SUCCESS:\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentsLoading = false;\n        draft.addCommentsDone = true;\n        break;\n\n      case ADD_COMMENTS_FAILURE:\n        draft.addCommentsLoading = false;\n        draft.addCommentsFailure = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostFailure = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadin = false;\n        draft.removePostFailure = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default rootReducer;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  "],"sourceRoot":""}