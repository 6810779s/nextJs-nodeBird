{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/@material-ui/icons/LockOpenOutlined.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?9d0d","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://_N_E/./node_modules/date-fns/esm/toDate/index.js","webpack://_N_E/./node_modules/date-fns/esm/addDays/index.js","webpack://_N_E/./node_modules/date-fns/esm/addMonths/index.js","webpack://_N_E/./node_modules/date-fns/esm/addYears/index.js","webpack://_N_E/./node_modules/date-fns/esm/endOfDay/index.js","webpack://_N_E/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/endOfYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/isDate/index.js","webpack://_N_E/./node_modules/date-fns/esm/isValid/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://_N_E/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://_N_E/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://_N_E/./node_modules/date-fns/esm/format/index.js","webpack://_N_E/./node_modules/date-fns/esm/isAfter/index.js","webpack://_N_E/./node_modules/date-fns/esm/isBefore/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfDay/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfHour/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/assign/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/index.js","webpack://_N_E/./node_modules/date-fns/esm/getDaysInMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/endOfMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfYear/index.js","webpack://_N_E/./node_modules/@date-io/date-fns/build/index.esm.js","webpack://_N_E/./node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/getHours/index.js","webpack://_N_E/./node_modules/date-fns/esm/setHours/index.js","webpack://_N_E/./node_modules/date-fns/esm/setMinutes/index.js","webpack://_N_E/./node_modules/date-fns/esm/getSeconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/setSeconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/isSameDay/index.js","webpack://_N_E/./node_modules/date-fns/esm/isSameMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/isSameYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/isSameHour/index.js","webpack://_N_E/./node_modules/date-fns/esm/getYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/setYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/isEqual/index.js","webpack://_N_E/./node_modules/date-fns/esm/setMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/eachDayOfInterval/index.js","webpack://_N_E/./node_modules/@material-ui/icons/esm/Copyright.js","webpack://_N_E/./components/SignUpForm.js","webpack://_N_E/./pages/signup.js"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","arrayLikeToArray","module","exports","arr","Array","isArray","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","key","i","len","metatype","category","categories","unique","c","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","default","_default","createElement","d","window","__NEXT_P","push","constructor","_hasHeadManager","emitChange","componentDidMount","this","componentDidUpdate","componentWillUnmount","render","Component","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","obj","enumerable","configurable","writable","iter","Symbol","iterator","from","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","theme","color","palette","text","primary","typography","body2","backgroundColor","background","common","white","withStyles","fontWeight","fontWeightBold","body","margin","_props$children","children","classes","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","length","toDate","argument","arguments","argStr","prototype","toString","call","Date","getTime","console","warn","Error","stack","addDays","dirtyDate","dirtyAmount","date","amount","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","addYears","endOfDay","setHours","endOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","endOfYear","year","isDate","isValid","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","result","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","undefined","width","String","defaultWidth","format","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","code","formatDistance","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","firstWeekContainsDate","addMilliseconds","timestamp","subMilliseconds","startOfUTCISOWeek","getUTCDay","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","getUTCISOWeek","round","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","M","getUTCMonth","a","dayPeriodEnumValue","getUTCHours","toUpperCase","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","isAfter","dirtyDateToCompare","dateToCompare","isBefore","startOfDay","startOfHour","setMinutes","target","dirtyObject","property","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","setUTCWeek","dirtyISOWeek","setUTCISOWeek","subPriority","isLeapYear","wholeWeekDays","setUTCISODay","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","notWhitespaceRegExp","dateToSystemTimezone","convertedDate","getDaysInMonth","monthIndex","lastDayOfMonth","startOfMonth","endOfMonth","startOfWeek","startOfYear","cleanDate","DateFnsUtils","_a","yearFormat","yearMonthFormat","dateTime12hFormat","dateTime24hFormat","time12hFormat","time24hFormat","dateFormat","getDiff","comparing","dateLeft","dateRight","differenceInMilliseconds","dirtyHours","dirtyMinutes","setSeconds","dirtySeconds","seconds","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","isSameMonth","isSameYear","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","getYear","setYear","dirtyYear","formatString","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","subFnOptions","setters","tokens","map","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","setterArray","dirtyFormatStr","formatStr","formatterOptions","formatter","isEqual","dirtyLeftDate","dirtyRightDate","isNull","isAfterDay","isBeforeDay","isBeforeYear","isAfterYear","formatNumber","numberToFormat","dirtyMonth","dateWithDesiredMonth","min","getMeridiemText","ampm","getNextMonth","getPreviousMonth","getMonthArray","monthArray","prevMonth","mergeDateAndTime","getWeekdays","_this","now","dirtyInterval","interval","startDate","start","endTime","end","dates","currentDate","step","eachDayOfInterval","getWeekArray","current","nestedWeeks","weekNumber","getYearRange","endDate","years","getCalendarHeaderText","getYearText","getDatePickerHeaderText","getDateTimePickerHeaderText","getMonthText","getDayText","getHourText","getMinuteText","getSecondText","createSvgIcon","SignUpForm","makeStyles","dispatch","useDispatch","useSelector","state","user","signUpLoading","signUpDone","useState","checkState","setCheckState","signUpState","setSignUpState","useEffect","Router","checkBoxState","useCallback","checked","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","style","Typography","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","get","signUpRequestAction","email","password","nickname","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","fullWidth","id","label","autoFocus","type","defaultValue","InputLabelProps","shrink","FormControlLabel","control","Checkbox","onChange","FormHelperText","Button","mb","Loading","justifyContent","href","Copyright","signup","me","AppLayout"],"mappings":"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","file":"static/chunks/pages/signup-05fc86043f20ce255053.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOpenOutlined');\n\nexports.default = _default;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/signup\",\n      function () {\n        return require(\"private-next-pages/signup.js\");\n      }\n    ]);\n  ","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addDays from 'date-fns/addDays';\nimport addMonths from 'date-fns/addMonths';\nimport addYears from 'date-fns/addYears';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport format from 'date-fns/format';\nimport getHours from 'date-fns/getHours';\nimport getSeconds from 'date-fns/getSeconds';\nimport getYear from 'date-fns/getYear';\nimport isAfter from 'date-fns/isAfter';\nimport isBefore from 'date-fns/isBefore';\nimport isEqual from 'date-fns/isEqual';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameYear from 'date-fns/isSameYear';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameHour from 'date-fns/isSameHour';\nimport isValid from 'date-fns/isValid';\nimport dateFnsParse from 'date-fns/parse';\nimport setHours from 'date-fns/setHours';\nimport setMinutes from 'date-fns/setMinutes';\nimport setMonth from 'date-fns/setMonth';\nimport setSeconds from 'date-fns/setSeconds';\nimport setYear from 'date-fns/setYear';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\n\nvar DateFnsUtils = /** @class */ (function () {\n    function DateFnsUtils(_a) {\n        var locale = (_a === void 0 ? {} : _a).locale;\n        this.yearFormat = \"yyyy\";\n        this.yearMonthFormat = \"MMMM yyyy\";\n        this.dateTime12hFormat = \"MMMM do hh:mm aaaa\";\n        this.dateTime24hFormat = \"MMMM do HH:mm\";\n        this.time12hFormat = \"hh:mm a\";\n        this.time24hFormat = \"HH:mm\";\n        this.dateFormat = \"MMMM do\";\n        this.locale = locale;\n    }\n    // Note: date-fns input types are more lenient than this adapter, so we need to expose our more\n    // strict signature and delegate to the more lenient signature. Otherwise, we have downstream type errors upon usage.\n    DateFnsUtils.prototype.addDays = function (value, count) {\n        return addDays(value, count);\n    };\n    DateFnsUtils.prototype.isValid = function (value) {\n        return isValid(this.date(value));\n    };\n    DateFnsUtils.prototype.getDiff = function (value, comparing) {\n        return differenceInMilliseconds(value, this.date(comparing));\n    };\n    DateFnsUtils.prototype.isAfter = function (value, comparing) {\n        return isAfter(value, comparing);\n    };\n    DateFnsUtils.prototype.isBefore = function (value, comparing) {\n        return isBefore(value, comparing);\n    };\n    DateFnsUtils.prototype.startOfDay = function (value) {\n        return startOfDay(value);\n    };\n    DateFnsUtils.prototype.endOfDay = function (value) {\n        return endOfDay(value);\n    };\n    DateFnsUtils.prototype.getHours = function (value) {\n        return getHours(value);\n    };\n    DateFnsUtils.prototype.setHours = function (value, count) {\n        return setHours(value, count);\n    };\n    DateFnsUtils.prototype.setMinutes = function (value, count) {\n        return setMinutes(value, count);\n    };\n    DateFnsUtils.prototype.getSeconds = function (value) {\n        return getSeconds(value);\n    };\n    DateFnsUtils.prototype.setSeconds = function (value, count) {\n        return setSeconds(value, count);\n    };\n    DateFnsUtils.prototype.isSameDay = function (value, comparing) {\n        return isSameDay(value, comparing);\n    };\n    DateFnsUtils.prototype.isSameMonth = function (value, comparing) {\n        return isSameMonth(value, comparing);\n    };\n    DateFnsUtils.prototype.isSameYear = function (value, comparing) {\n        return isSameYear(value, comparing);\n    };\n    DateFnsUtils.prototype.isSameHour = function (value, comparing) {\n        return isSameHour(value, comparing);\n    };\n    DateFnsUtils.prototype.startOfMonth = function (value) {\n        return startOfMonth(value);\n    };\n    DateFnsUtils.prototype.endOfMonth = function (value) {\n        return endOfMonth(value);\n    };\n    DateFnsUtils.prototype.getYear = function (value) {\n        return getYear(value);\n    };\n    DateFnsUtils.prototype.setYear = function (value, count) {\n        return setYear(value, count);\n    };\n    DateFnsUtils.prototype.date = function (value) {\n        if (typeof value === \"undefined\") {\n            return new Date();\n        }\n        if (value === null) {\n            return null;\n        }\n        return new Date(value);\n    };\n    DateFnsUtils.prototype.parse = function (value, formatString) {\n        if (value === \"\") {\n            return null;\n        }\n        return dateFnsParse(value, formatString, new Date(), { locale: this.locale });\n    };\n    DateFnsUtils.prototype.format = function (date, formatString) {\n        return format(date, formatString, { locale: this.locale });\n    };\n    DateFnsUtils.prototype.isEqual = function (date, comparing) {\n        if (date === null && comparing === null) {\n            return true;\n        }\n        return isEqual(date, comparing);\n    };\n    DateFnsUtils.prototype.isNull = function (date) {\n        return date === null;\n    };\n    DateFnsUtils.prototype.isAfterDay = function (date, value) {\n        return isAfter(date, endOfDay(value));\n    };\n    DateFnsUtils.prototype.isBeforeDay = function (date, value) {\n        return isBefore(date, startOfDay(value));\n    };\n    DateFnsUtils.prototype.isBeforeYear = function (date, value) {\n        return isBefore(date, startOfYear(value));\n    };\n    DateFnsUtils.prototype.isAfterYear = function (date, value) {\n        return isAfter(date, endOfYear(value));\n    };\n    DateFnsUtils.prototype.formatNumber = function (numberToFormat) {\n        return numberToFormat;\n    };\n    DateFnsUtils.prototype.getMinutes = function (date) {\n        return date.getMinutes();\n    };\n    DateFnsUtils.prototype.getMonth = function (date) {\n        return date.getMonth();\n    };\n    DateFnsUtils.prototype.setMonth = function (date, count) {\n        return setMonth(date, count);\n    };\n    DateFnsUtils.prototype.getMeridiemText = function (ampm) {\n        return ampm === \"am\" ? \"AM\" : \"PM\";\n    };\n    DateFnsUtils.prototype.getNextMonth = function (date) {\n        return addMonths(date, 1);\n    };\n    DateFnsUtils.prototype.getPreviousMonth = function (date) {\n        return addMonths(date, -1);\n    };\n    DateFnsUtils.prototype.getMonthArray = function (date) {\n        var firstMonth = startOfYear(date);\n        var monthArray = [firstMonth];\n        while (monthArray.length < 12) {\n            var prevMonth = monthArray[monthArray.length - 1];\n            monthArray.push(this.getNextMonth(prevMonth));\n        }\n        return monthArray;\n    };\n    DateFnsUtils.prototype.mergeDateAndTime = function (date, time) {\n        return this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time));\n    };\n    DateFnsUtils.prototype.getWeekdays = function () {\n        var _this = this;\n        var now = new Date();\n        return eachDayOfInterval({\n            start: startOfWeek(now, { locale: this.locale }),\n            end: endOfWeek(now, { locale: this.locale })\n        }).map(function (day) { return _this.format(day, \"EEEEEE\"); });\n    };\n    DateFnsUtils.prototype.getWeekArray = function (date) {\n        var start = startOfWeek(startOfMonth(date), { locale: this.locale });\n        var end = endOfWeek(endOfMonth(date), { locale: this.locale });\n        var count = 0;\n        var current = start;\n        var nestedWeeks = [];\n        while (isBefore(current, end)) {\n            var weekNumber = Math.floor(count / 7);\n            nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n            nestedWeeks[weekNumber].push(current);\n            current = addDays(current, 1);\n            count += 1;\n        }\n        return nestedWeeks;\n    };\n    DateFnsUtils.prototype.getYearRange = function (start, end) {\n        var startDate = startOfYear(start);\n        var endDate = endOfYear(end);\n        var years = [];\n        var current = startDate;\n        while (isBefore(current, endDate)) {\n            years.push(current);\n            current = addYears(current, 1);\n        }\n        return years;\n    };\n    // displaying methpds\n    DateFnsUtils.prototype.getCalendarHeaderText = function (date) {\n        return this.format(date, this.yearMonthFormat);\n    };\n    DateFnsUtils.prototype.getYearText = function (date) {\n        return this.format(date, \"yyyy\");\n    };\n    DateFnsUtils.prototype.getDatePickerHeaderText = function (date) {\n        return this.format(date, \"EEE, MMM d\");\n    };\n    DateFnsUtils.prototype.getDateTimePickerHeaderText = function (date) {\n        return this.format(date, \"MMM d\");\n    };\n    DateFnsUtils.prototype.getMonthText = function (date) {\n        return this.format(date, \"MMMM\");\n    };\n    DateFnsUtils.prototype.getDayText = function (date) {\n        return this.format(date, \"d\");\n    };\n    DateFnsUtils.prototype.getHourText = function (date, ampm) {\n        return this.format(date, ampm ? \"hh\" : \"HH\");\n    };\n    DateFnsUtils.prototype.getMinuteText = function (date) {\n        return this.format(date, \"mm\");\n    };\n    DateFnsUtils.prototype.getSecondText = function (date) {\n        return this.format(date, \"ss\");\n    };\n    return DateFnsUtils;\n}());\n\nexport default DateFnsUtils;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n * \n * @example\n * // Are 4 September and 4 October in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n * \n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import startOfHour from \"../startOfHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour (and same day)?\n *\n * @description\n * Are the given dates in the same hour (and same day)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour (and same day)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n * \n * @example\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\n * //=> false\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.88 9.14c1.28.06 1.61 1.15 1.63 1.66h1.79c-.08-1.98-1.49-3.19-3.45-3.19C9.64 7.61 8 9 8 12.14c0 1.94.93 4.24 3.84 4.24 2.22 0 3.41-1.65 3.44-2.95h-1.79c-.03.59-.45 1.38-1.63 1.44-1.31-.04-1.86-1.06-1.86-2.73 0-2.89 1.28-2.98 1.88-3zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'Copyright');","import \"date-fns\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  CssBaseline,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Link from \"next/link\";\nimport { Copyright } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUpRequestAction } from \"../reducers/user\";\nimport Loading from \"./Loading\";\nimport Router from \"next/router\";\n// import {\n//   MuiPickersUtilsProvider,\n//   KeyboardDatePicker,\n// } from '@material-ui/pickers';\n\nconst useStyles = makeStyles({});\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const { signUpLoading, signUpDone } = useSelector((state) => state.user);\n  const [checkState, setCheckState] = useState(false);\n  const [signUpState, setSignUpState] = useState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  useEffect(() => {\n    if (signUpDone) {\n      Router.push(\"/\");\n    }\n  });\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    if (\n      data.get(\"firstName\") &&\n      data.get(\"lastName\") &&\n      data.get(\"userEmail\") &&\n      data.get(\"password\") &&\n      checkState\n    ) {\n      setSignUpState(true);\n      dispatch(\n        signUpRequestAction({\n          email: data.get(\"userEmail\"),\n          password: data.get(\"password\"),\n          nickname: `${data.get(\"firstName\")} ${data.get(\"lastName\")}`,\n        })\n      );\n    } else {\n      setSignUpState(false);\n    }\n  };\n\n  const checkBoxState = useCallback((e) => {\n    if (e.target.checked) {\n      setCheckState(true);\n    } else {\n      setCheckState(false);\n    }\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar style={{ background: \"red\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"family-name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"date\"\n                name=\"date\"\n                label=\"Birthday\"\n                type=\"date\"\n                defaultValue=\"2022-01-01\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{ width: \"100%\" }}\n              />\n              {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  placeholder=\"2018/10/10\"\n                  label=\"생년월일\"\n                  value={selectedDate}\n                  onChange={(date) => handleDateChange(date)}\n                  format=\"yyyy/MM/dd\"\n                />\n              </MuiPickersUtilsProvider> */}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                type=\"email\"\n                id=\"userEmail\"\n                label=\"Email\"\n                name=\"userEmail\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    value=\"allowExtraEmails\"\n                    color=\"primary\"\n                    onChange={checkBoxState}\n                  />\n                }\n                label=\"개인정보 제공에 동의합니다.\"\n              />\n              {!checkState && (\n                <FormHelperText style={{ color: \"red\" }}>\n                  * 위 약관에 동의를 하셔야 됩니다.\n                </FormHelperText>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            {signUpLoading ? <Loading /> : \"Sign Up\"}\n          </Button>\n          {signUpState ? (\n            <div>Go!</div>\n          ) : (\n            <div style={{ color: \"red\" }}>모든 정보를 입력해 주세요</div>\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n    </Container>\n  );\n};\n\nexport default SignUpForm;\n","import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport { useSelector } from \"react-redux\";\nimport Router from \"next/router\";\n\nconst signup = () => {\n  const { me, signUpDone } = useSelector((state) => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace(\"/\");\n    }\n  }, [me && me.id]);\n\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace(\"/ \");\n    }\n  }, [signUpDone]);\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>signup | nodeBird</title>\n      </Head>\n      <SignUpForm />\n    </AppLayout>\n  );\n};\n\nexport default signup;\n"],"sourceRoot":""}